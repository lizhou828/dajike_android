com.djk_shop.AActivity -> com.djk_shop.AActivity:
    18:23:void onCreate(android.os.Bundle) -> onCreate
com.djk_shop.BActivity -> com.djk_shop.BActivity:
    18:23:void onCreate(android.os.Bundle) -> onCreate
com.djk_shop.CActivity -> com.djk_shop.CActivity:
    18:23:void onCreate(android.os.Bundle) -> onCreate
com.djk_shop.EActivity -> com.djk_shop.EActivity:
    18:23:void onCreate(android.os.Bundle) -> onCreate
com.djk_shop.LoginActivity -> com.djk_shop.LoginActivity:
    android.widget.Button loginButton -> b
    java.lang.String username -> c
    java.lang.String password -> d
    android.widget.EditText usernameEditText -> e
    android.widget.EditText passwordEditText -> f
    android.widget.TextView registerTextView -> g
    boolean PASSWORD -> h
    boolean USER_NAME -> i
    com.j256.ormlite.dao.Dao userDao -> j
    com.djk_shop.LoginActivity instance -> a
    46:58:void onCreate(android.os.Bundle) -> onCreate
    61:112:void initViews() -> a
    115:119:void canUseLoginButton() -> b
    121:125:void cannotUseLoginButton() -> c
    129:162:void onClick(android.view.View) -> onClick
    165:180:java.lang.Boolean login(java.lang.String,java.lang.String) -> a
    30:30:java.lang.String access$002(com.djk_shop.LoginActivity,java.lang.String) -> a
    30:30:android.widget.EditText access$100(com.djk_shop.LoginActivity) -> a
    30:30:java.lang.String access$000(com.djk_shop.LoginActivity) -> b
    30:30:boolean access$202(com.djk_shop.LoginActivity,boolean) -> a
    30:30:boolean access$300(com.djk_shop.LoginActivity) -> c
    30:30:void access$400(com.djk_shop.LoginActivity) -> d
    30:30:void access$500(com.djk_shop.LoginActivity) -> e
    30:30:java.lang.String access$602(com.djk_shop.LoginActivity,java.lang.String) -> b
    30:30:android.widget.EditText access$700(com.djk_shop.LoginActivity) -> f
    30:30:java.lang.String access$600(com.djk_shop.LoginActivity) -> g
    30:30:boolean access$302(com.djk_shop.LoginActivity,boolean) -> b
    30:30:boolean access$200(com.djk_shop.LoginActivity) -> h
com.djk_shop.LoginActivity$1 -> com.djk_shop.a:
    com.djk_shop.LoginActivity this$0 -> a
    70:70:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    73:73:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    76:87:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.djk_shop.LoginActivity$2 -> com.djk_shop.b:
    com.djk_shop.LoginActivity this$0 -> a
    93:93:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    96:96:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    99:110:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.djk_shop.MobileAppInfoActivity -> com.djk_shop.MobileAppInfoActivity:
    android.widget.TextView mobileAppText -> a
    23:73:void onCreate(android.os.Bundle) -> onCreate
    76:77:void initViews() -> a
    80:88:android.content.pm.PackageInfo getAppInfo() -> b
com.djk_shop.MyActivity -> com.djk_shop.MyActivity:
    android.widget.Button loginButton -> a
    android.content.DialogInterface$OnClickListener backButtonListener -> b
    android.widget.Button mobileAndAppInfo -> c
    37:43:void onCreate(android.os.Bundle) -> onCreate
    46:48:void initViews() -> a
    52:60:void onClick(android.view.View) -> onClick
    65:74:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.djk_shop.MyActivity$1 -> com.djk_shop.c:
    com.djk_shop.MyActivity this$0 -> a
    21:28:void onClick(android.content.DialogInterface,int) -> onClick
com.djk_shop.MyApplication -> com.djk_shop.MyApplication:
    java.util.Map data -> a
    java.util.Map cache -> b
    23:26:void onCreate() -> onCreate
    30:31:void onTerminate() -> onTerminate
    34:34:java.util.Map getData() -> a
com.djk_shop.PortalActivity -> com.djk_shop.PortalActivity:
    android.widget.TabHost mTabHost -> b
    android.content.Intent mAIntent -> c
    android.content.Intent mBIntent -> d
    android.content.Intent mCIntent -> e
    android.content.Intent mDIntent -> f
    android.content.Intent mEIntent -> g
    com.djk_shop.PortalActivity instance -> a
    29:61:void onCreate(android.os.Bundle) -> onCreate
    65:85:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    88:95:void setupIntent() -> a
    98:98:android.widget.TabHost$TabSpec buildTabSpec(java.lang.String,int,int,android.content.Intent) -> a
com.djk_shop.R -> com.djk_shop.R:
com.djk_shop.R$attr -> com.djk_shop.R$attr:
com.djk_shop.R$color -> com.djk_shop.R$color:
    int can_login -> can_login
    int cant_login -> cant_login
com.djk_shop.R$dimen -> com.djk_shop.R$dimen:
    int bottom_tab_font_size -> bottom_tab_font_size
    int bottom_tab_padding_drawable -> bottom_tab_padding_drawable
    int bottom_tab_padding_up -> bottom_tab_padding_up
    int emotion_item_view_height -> emotion_item_view_height
    int large_padding_length -> large_padding_length
    int new_blog_size -> new_blog_size
    int no_result_padding_length -> no_result_padding_length
    int normal_padding_length -> normal_padding_length
    int splash_test_center_margin_right -> splash_test_center_margin_right
    int splash_test_top_margin_top -> splash_test_top_margin_top
    int sta_height -> sta_height
    int switch_logo_bottom_padding -> switch_logo_bottom_padding
    int title_height -> title_height
    int title_text_size -> title_text_size
    int widget_content_margin_left -> widget_content_margin_left
    int widget_content_margin_top -> widget_content_margin_top
    int widget_height -> widget_height
    int widget_logo_size -> widget_logo_size
    int widget_write_margin_left -> widget_write_margin_left
    int widget_write_margin_top -> widget_write_margin_top
com.djk_shop.R$drawable -> com.djk_shop.R$drawable:
    int black -> black
    int home_btn_bg -> home_btn_bg
    int home_btn_bg_d -> home_btn_bg_d
    int home_btn_bg_n -> home_btn_bg_n
    int home_btn_bg_s -> home_btn_bg_s
    int ic_launcher -> ic_launcher
    int icon_1_d -> icon_1_d
    int icon_1_n -> icon_1_n
    int icon_2_d -> icon_2_d
    int icon_2_n -> icon_2_n
    int icon_3_d -> icon_3_d
    int icon_3_n -> icon_3_n
    int icon_4_d -> icon_4_d
    int icon_4_n -> icon_4_n
    int icon_5_d -> icon_5_d
    int icon_5_n -> icon_5_n
    int icon_shoping_cart -> icon_shoping_cart
    int list_background -> list_background
    int ltgray -> ltgray
    int ltyellow -> ltyellow
    int maintab_toolbar_bg -> maintab_toolbar_bg
    int namcard_picker_bkg_hover -> namcard_picker_bkg_hover
    int namcard_picker_bkg_normal -> namcard_picker_bkg_normal
    int portal -> portal
    int shape -> shape
    int t_1 -> t_1
    int t_2 -> t_2
    int t_3 -> t_3
    int t_4 -> t_4
    int t_5 -> t_5
    int t_5_1 -> t_5_1
    int t_6 -> t_6
    int t_7 -> t_7
    int table_frame_gray -> table_frame_gray
    int transparent -> transparent
    int transparent_background -> transparent_background
    int user_center_item_border -> user_center_item_border
    int widget_edit_block_bg_normal -> widget_edit_block_bg_normal
com.djk_shop.R$id -> com.djk_shop.R$id:
    int have_account -> have_account
    int login_button -> login_button
    int login_forget_password -> login_forget_password
    int login_page -> login_page
    int login_page_button -> login_page_button
    int login_password -> login_password
    int login_text_view -> login_text_view
    int login_username -> login_username
    int main_radio -> main_radio
    int mobile_and_app_info_button -> mobile_and_app_info_button
    int mobile_and_app_info_text -> mobile_and_app_info_text
    int radio_button0 -> radio_button0
    int radio_button1 -> radio_button1
    int radio_button2 -> radio_button2
    int radio_button3 -> radio_button3
    int radio_button4 -> radio_button4
    int register_button -> register_button
    int register_page -> register_page
    int register_password_1 -> register_password_1
    int register_password_2 -> register_password_2
    int register_text_view -> register_text_view
    int register_username -> register_username
    int user_center_head -> user_center_head
    int user_center_header -> user_center_header
    int user_center_image -> user_center_image
    int user_center_nickname -> user_center_nickname
com.djk_shop.R$layout -> com.djk_shop.R$layout:
    int head -> head
    int login -> login
    int login_head -> login_head
    int main -> main
    int mobile_info -> mobile_info
    int portal -> portal
    int register -> register
    int register_head -> register_head
    int user_center -> user_center
    int user_center_body -> user_center_body
    int user_center_head -> user_center_head
com.djk_shop.R$string -> com.djk_shop.R$string:
    int app_name -> app_name
    int back -> back
    int confirm_password -> confirm_password
    int forget_password -> forget_password
    int have_account -> have_account
    int login -> login
    int main_account -> main_account
    int main_friends -> main_friends
    int main_home -> main_home
    int main_manage_date -> main_manage_date
    int main_news -> main_news
    int main_usercenter -> main_usercenter
    int mobile_and_app_info -> mobile_and_app_info
    int more -> more
    int register -> register
    int register_success -> register_success
    int shop_cart -> shop_cart
    int to_login -> to_login
    int type_password -> type_password
    int type_username -> type_username
com.djk_shop.R$style -> com.djk_shop.R$style:
    int LoginHeaderTitleBackground -> LoginHeaderTitleBackground
    int login_button -> login_button
    int login_head -> login_head
    int main_tab_bottom -> main_tab_bottom
    int user_center_item_border -> user_center_item_border
com.djk_shop.RegisterActivity -> com.djk_shop.RegisterActivity:
    android.widget.TextView loginTextView -> b
    android.widget.TextView haveAccountTextView -> c
    android.widget.TextView passwordTextView1 -> d
    android.widget.TextView passwordTextView2 -> e
    android.widget.TextView usernameTextView -> f
    java.lang.String username -> g
    java.lang.String password1 -> h
    java.lang.String password2 -> i
    com.j256.ormlite.dao.Dao userDao -> j
    android.widget.Button registerButton -> k
    com.djk_shop.RegisterActivity instance -> a
    49:67:void onCreate(android.os.Bundle) -> onCreate
    69:76:void initView() -> a
    80:113:void onClick(android.view.View) -> onClick
    116:130:boolean checkData() -> b
    138:142:void getData() -> c
    146:156:boolean register(java.lang.String,java.lang.String) -> a
    161:175:boolean userExists(java.lang.String) -> a
com.djk_shop.UserCenterActivity -> com.djk_shop.UserCenterActivity:
    18:25:void onCreate(android.os.Bundle) -> onCreate
com.djk_shop.dao.ormlite.DBHelper -> com.djk_shop.dao.ormlite.DBHelper:
    com.j256.ormlite.dao.Dao userDao -> a
    32:37:void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    42:49:void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    52:53:com.j256.ormlite.dao.Dao getUserDao() -> a
com.djk_shop.modules.User -> com.djk_shop.a.a:
    java.lang.String username -> a
    java.lang.String password -> b
    85:86:void setUsername(java.lang.String) -> a
    93:94:void setPassword(java.lang.String) -> b
com.djk_shop.services.ormlite.UserService -> com.djk_shop.services.ormlite.UserService:
com.djk_shop.utils.StringUtils -> com.djk_shop.b.a:
    9:12:boolean isNotBlank(java.lang.String) -> a
    17:17:boolean isBlank(java.lang.String) -> b
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.AndroidCompiledStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    com.j256.ormlite.android.compat.ApiCompatibility apiCompatibility -> apiCompatibility
    java.lang.String sql -> sql
    android.database.sqlite.SQLiteDatabase db -> db
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    android.database.Cursor cursor -> cursor
    java.util.List args -> args
    java.lang.Integer max -> max
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook cancellationHook -> cancellationHook
    53:53:int getColumnCount() -> getColumnCount
    57:57:java.lang.String getColumnName(int) -> getColumnName
    62:65:com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    69:78:int runUpdate() -> runUpdate
    82:85:int runExecute() -> runExecute
    89:97:void close() -> close
    101:105:void closeQuietly() -> closeQuietly
    108:111:void cancel() -> cancel
    114:150:void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    153:155:void setMaxRows(int) -> setMaxRows
    159:159:void setQueryTimeout(long) -> setQueryTimeout
    169:188:android.database.Cursor getCursor() -> getCursor
    193:193:java.lang.String toString() -> toString
    201:220:int execSql(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.Object[]) -> execSql
    224:227:void isInPrep() -> isInPrep
    230:234:java.lang.Object[] getArgArray() -> getArgArray
    239:243:java.lang.String[] getStringArray() -> getStringArray
com.j256.ormlite.android.AndroidCompiledStatement$1 -> com.j256.ormlite.android.AndroidCompiledStatement$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.AndroidConnectionSource:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    boolean isOpen -> isOpen
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.support.DatabaseConnectionProxyFactory connectionProxyFactory -> connectionProxyFactory
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    54:54:com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    58:81:com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    86:86:void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    89:89:boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    93:94:void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    98:99:void close() -> close
    102:103:void closeQuietly() -> closeQuietly
    106:106:com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    110:110:boolean isOpen() -> isOpen
    117:118:void setDatabaseConnectionProxyFactory(com.j256.ormlite.support.DatabaseConnectionProxyFactory) -> setDatabaseConnectionProxyFactory
    121:121:boolean isCancelQueriesEnabled() -> isCancelQueriesEnabled
    133:134:void setCancelQueriesEnabled(boolean) -> setCancelQueriesEnabled
    138:138:java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.AndroidDatabaseConnection:
    java.lang.String ANDROID_VERSION -> ANDROID_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    android.database.sqlite.SQLiteDatabase db -> db
    boolean readWrite -> readWrite
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    55:55:boolean isAutoCommitSupported() -> isAutoCommitSupported
    60:65:boolean isAutoCommit() -> isAutoCommit
    74:84:void setAutoCommit(boolean) -> setAutoCommit
    88:92:java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    100:100:boolean isReadWrite() -> isReadWrite
    105:119:void commit(java.sql.Savepoint) -> commit
    124:137:void rollback(java.sql.Savepoint) -> rollback
    140:140:int executeStatement(java.lang.String,int) -> executeStatement
    146:148:com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    153:172:int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    178:178:int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    183:183:int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    188:207:java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    213:223:long queryForLong(java.lang.String) -> queryForLong
    229:245:long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    252:257:void close() -> close
    261:265:void closeQuietly() -> closeQuietly
    269:273:boolean isClosed() -> isClosed
    278:290:boolean isTableExists(java.lang.String) -> isTableExists
    295:321:int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> update
    325:368:void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> bindArgs
    371:384:java.lang.String[] toStrings(java.lang.Object[]) -> toStrings
    389:389:java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.j256.ormlite.android.AndroidDatabaseConnection$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint -> com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint:
    java.lang.String name -> name
    401:401:int getSavepointId() -> getSavepointId
    405:405:java.lang.String getSavepointName() -> getSavepointName
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.AndroidDatabaseResults:
    int MIN_NUM_COLUMN_NAMES_MAP -> MIN_NUM_COLUMN_NAMES_MAP
    android.database.Cursor cursor -> cursor
    java.lang.String[] columnNames -> columnNames
    java.util.Map columnNameMap -> columnNameMap
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    60:60:int getColumnCount() -> getColumnCount
    64:69:java.lang.String[] getColumnNames() -> getColumnNames
    73:73:boolean first() -> first
    77:77:boolean next() -> next
    81:81:boolean last() -> last
    85:85:boolean previous() -> previous
    89:89:boolean moveRelative(int) -> moveRelative
    93:93:boolean moveAbsolute(int) -> moveAbsolute
    100:100:int getCount() -> getCount
    107:107:int getPosition() -> getPosition
    111:128:int findColumn(java.lang.String) -> findColumn
    134:134:java.lang.String getString(int) -> getString
    138:141:boolean getBoolean(int) -> getBoolean
    146:152:char getChar(int) -> getChar
    157:157:byte getByte(int) -> getByte
    161:161:byte[] getBytes(int) -> getBytes
    165:165:short getShort(int) -> getShort
    169:169:int getInt(int) -> getInt
    173:173:long getLong(int) -> getLong
    177:177:float getFloat(int) -> getFloat
    181:181:double getDouble(int) -> getDouble
    185:185:java.sql.Timestamp getTimestamp(int) -> getTimestamp
    189:189:java.io.InputStream getBlobStream(int) -> getBlobStream
    193:193:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    197:197:boolean wasNull(int) -> wasNull
    201:201:com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    205:206:void close() -> close
    209:210:void closeQuietly() -> closeQuietly
    216:216:android.database.Cursor getRawCursor() -> getRawCursor
    221:221:java.lang.String toString() -> toString
    226:240:int lookupColumn(java.lang.String) -> lookupColumn
com.j256.ormlite.android.AndroidLog -> com.j256.ormlite.android.AndroidLog:
    java.lang.String ALL_LOGS_NAME -> ALL_LOGS_NAME
    int REFRESH_LEVEL_CACHE_EVERY -> REFRESH_LEVEL_CACHE_EVERY
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    java.lang.String className -> className
    int levelCacheC -> levelCacheC
    boolean[] levelCache -> levelCache
    73:81:boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    86:109:void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    112:135:void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    138:144:void refreshLevelCache() -> refreshLevelCache
    148:148:boolean isLevelEnabledInternal(int) -> isLevelEnabledInternal
    152:166:int levelToAndroidLevel(com.j256.ormlite.logger.Log$Level) -> levelToAndroidLevel
com.j256.ormlite.android.AndroidLog$1 -> com.j256.ormlite.android.AndroidLog$1:
    int[] $SwitchMap$com$j256$ormlite$logger$Log$Level -> $SwitchMap$com$j256$ormlite$logger$Log$Level
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.DatabaseTableConfigUtil:
    java.lang.Class annotationFactoryClazz -> annotationFactoryClazz
    java.lang.reflect.Field elementsField -> elementsField
    java.lang.Class annotationMemberClazz -> annotationMemberClazz
    java.lang.reflect.Field nameField -> nameField
    java.lang.reflect.Field valueField -> valueField
    int workedC -> workedC
    int[] configFieldNums -> configFieldNums
    int COLUMN_NAME -> COLUMN_NAME
    int DATA_TYPE -> DATA_TYPE
    int DEFAULT_VALUE -> DEFAULT_VALUE
    int WIDTH -> WIDTH
    int CAN_BE_NULL -> CAN_BE_NULL
    int ID -> ID
    int GENERATED_ID -> GENERATED_ID
    int GENERATED_ID_SEQUENCE -> GENERATED_ID_SEQUENCE
    int FOREIGN -> FOREIGN
    int USE_GET_SET -> USE_GET_SET
    int UNKNOWN_ENUM_NAME -> UNKNOWN_ENUM_NAME
    int THROW_IF_NULL -> THROW_IF_NULL
    int PERSISTED -> PERSISTED
    int FORMAT -> FORMAT
    int UNIQUE -> UNIQUE
    int UNIQUE_COMBO -> UNIQUE_COMBO
    int INDEX -> INDEX
    int UNIQUE_INDEX -> UNIQUE_INDEX
    int INDEX_NAME -> INDEX_NAME
    int UNIQUE_INDEX_NAME -> UNIQUE_INDEX_NAME
    int FOREIGN_AUTO_REFRESH -> FOREIGN_AUTO_REFRESH
    int MAX_FOREIGN_AUTO_REFRESH_LEVEL -> MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int PERSISTER_CLASS -> PERSISTER_CLASS
    int ALLOW_GENERATED_ID_INSERT -> ALLOW_GENERATED_ID_INSERT
    int COLUMN_DEFINITON -> COLUMN_DEFINITON
    int FOREIGN_AUTO_CREATE -> FOREIGN_AUTO_CREATE
    int VERSION -> VERSION
    int FOREIGN_COLUMN_NAME -> FOREIGN_COLUMN_NAME
    int READ_ONLY -> READ_ONLY
    45:59:com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    67:67:int getWorkedC() -> getWorkedC
    77:124:int[] lookupClasses() -> lookupClasses
    166:225:int configFieldNameToNum(java.lang.String) -> configFieldNameToNum
    235:263:com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> configFromField
    273:290:com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> buildConfig
    298:394:void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> assignConfigField
    397:400:java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample:
    java.lang.String field -> field
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.OpenHelperManager:
    java.lang.String HELPER_CLASS_RESOURCE_NAME -> HELPER_CLASS_RESOURCE_NAME
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class helperClass -> helperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean wasClosed -> wasClosed
    int instanceCount -> instanceCount
    51:56:void setOpenHelperClass(java.lang.Class) -> setOpenHelperClass
    64:65:void setHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> setHelper
    74:78:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class) -> getHelper
    100:107:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> getHelper
    115:116:void release() -> release
    130:143:void releaseHelper() -> releaseHelper
    150:158:void innerSetHelperClass(java.lang.Class) -> innerSetHelperClass
    161:203:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class) -> loadHelper
    213:222:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> constructHelper
    232:273:java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> lookupHelperClass
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.logger.Logger logger -> logger
    35:45:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    53:53:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    58:63:void onCreate(android.os.Bundle) -> onCreate
    67:70:void onDestroy() -> onDestroy
    84:86:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    99:102:void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
    106:106:java.lang.String toString() -> toString
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    32:42:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    50:50:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    55:60:void onCreate(android.os.Bundle) -> onCreate
    64:67:void onDestroy() -> onDestroy
    81:82:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    95:97:void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    26:36:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    44:44:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    49:54:void onCreate(android.os.Bundle) -> onCreate
    58:61:void onDestroy() -> onDestroy
    75:76:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    89:91:void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    25:35:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    43:43:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    48:53:void onCreate() -> onCreate
    57:60:void onDestroy() -> onDestroy
    74:75:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    88:90:void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    26:36:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    44:44:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    49:54:void onCreate(android.os.Bundle) -> onCreate
    58:61:void onDestroy() -> onDestroy
    77:78:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    91:93:void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteConfigUtil -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil:
    java.lang.String RESOURCE_DIR_NAME -> RESOURCE_DIR_NAME
    java.lang.String RAW_DIR_NAME -> RAW_DIR_NAME
    int maxFindSourceLevel -> maxFindSourceLevel
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    78:82:void main(java.lang.String[]) -> main
    89:92:void writeConfigFile(java.lang.String) -> writeConfigFile
    98:106:void writeConfigFile(java.lang.String,java.lang.Class[]) -> writeConfigFile
    112:113:void writeConfigFile(java.io.File) -> writeConfigFile
    119:122:void writeConfigFile(java.io.File,java.io.File) -> writeConfigFile
    128:130:void writeConfigFile(java.io.File,java.lang.Class[]) -> writeConfigFile
    136:139:void writeConfigFile(java.io.OutputStream,java.io.File) -> writeConfigFile
    145:156:void writeConfigFile(java.io.OutputStream,java.lang.Class[]) -> writeConfigFile
    163:170:java.io.File findRawDir(java.io.File) -> findRawDir
    174:180:void writeHeader(java.io.BufferedWriter) -> writeHeader
    184:231:void findAnnotatedClasses(java.util.List,java.io.File,int) -> findAnnotatedClasses
    234:261:void writeConfigForTable(java.io.BufferedWriter,java.lang.Class) -> writeConfigForTable
    264:293:boolean classHasAnnotations(java.lang.Class) -> classHasAnnotations
    302:317:java.lang.String getPackageOfClass(java.io.File) -> getPackageOfClass
    325:337:java.io.File findResRawDir(java.io.File) -> findResRawDir
com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1 -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1:
    329:329:boolean accept(java.io.File) -> accept
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> connectionSource
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isOpen -> isOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    179:183:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    191:215:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    222:246:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    253:260:void close() -> close
    266:266:boolean isOpen() -> isOpen
    279:282:com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> getDao
    295:300:com.j256.ormlite.dao.RuntimeExceptionDao getRuntimeExceptionDao(java.lang.Class) -> getRuntimeExceptionDao
    306:306:java.lang.String toString() -> toString
    310:314:java.io.InputStream openFileId(android.content.Context,int) -> openFileId
    319:325:java.io.InputStream openFile(java.io.File) -> openFile
com.j256.ormlite.android.compat.ApiCompatibility -> com.j256.ormlite.android.compat.ApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook -> com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook:
    void cancel() -> cancel
com.j256.ormlite.android.compat.ApiCompatibilityUtils -> com.j256.ormlite.android.compat.ApiCompatibilityUtils:
    com.j256.ormlite.android.compat.ApiCompatibility compatibility -> compatibility
    int BASE -> BASE
    int BASE_1_1 -> BASE_1_1
    int CUPCAKE -> CUPCAKE
    int DONUT -> DONUT
    int ECLAIR -> ECLAIR
    int ECLAIR_0_1 -> ECLAIR_0_1
    int ECLAIR_MR1 -> ECLAIR_MR1
    int FROYO -> FROYO
    int GINGERBREAD -> GINGERBREAD
    int GINGERBREAD_MR1 -> GINGERBREAD_MR1
    int HONEYCOMB -> HONEYCOMB
    int HONEYCOMB_MR1 -> HONEYCOMB_MR1
    int HONEYCOMB_MR2 -> HONEYCOMB_MR2
    int ICE_CREAM_SANDWICH -> ICE_CREAM_SANDWICH
    int ICE_CREAM_SANDWICH_MR1 -> ICE_CREAM_SANDWICH_MR1
    int JELLY_BEAN -> JELLY_BEAN
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    int JELLY_BEAN_MR2 -> JELLY_BEAN_MR2
    50:50:com.j256.ormlite.android.compat.ApiCompatibility getCompatibility() -> getCompatibility
com.j256.ormlite.android.compat.BasicApiCompatibility -> com.j256.ormlite.android.compat.BasicApiCompatibility:
    15:15:android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    19:19:com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility:
    20:23:android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    29:29:com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook:
    android.os.CancellationSignal cancellationSignal -> cancellationSignal
    41:42:void cancel() -> cancel
    32:32:android.os.CancellationSignal access$000(com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook) -> access$000
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.dao.BaseDaoImpl:
    boolean initialized -> initialized
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> statementExecutor
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.table.ObjectFactory objectFactory -> objectFactory
    java.lang.ThreadLocal daoConfigLevelLocal -> daoConfigLevelLocal
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> defaultObjectCache
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    136:217:void initialize() -> initialize
    220:225:java.lang.Object queryForId(java.lang.Object) -> queryForId
    230:235:java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    240:241:java.util.List queryForAll() -> queryForAll
    245:245:java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    249:250:com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    254:255:com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    259:260:com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    264:265:java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    269:269:java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    273:273:java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    277:277:java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    281:281:java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    285:293:java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    298:312:int create(java.lang.Object) -> create
    317:325:java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    330:340:com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    345:354:int update(java.lang.Object) -> update
    360:369:int updateId(java.lang.Object,java.lang.Object) -> updateId
    375:380:int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    385:399:int refresh(java.lang.Object) -> refresh
    405:414:int delete(java.lang.Object) -> delete
    420:429:int deleteById(java.lang.Object) -> deleteById
    435:444:int delete(java.util.Collection) -> delete
    450:459:int deleteIds(java.util.Collection) -> deleteIds
    465:470:int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    475:475:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    479:479:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    483:485:com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    489:490:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    505:506:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    521:525:void closeLastIterator() -> closeLastIterator
    528:528:com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    532:534:com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    538:542:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    548:552:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    558:562:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    568:572:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    577:584:long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    589:596:int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    601:608:int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    613:620:int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    625:636:java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    641:642:java.lang.String objectToString(java.lang.Object) -> objectToString
    646:655:boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    659:666:java.lang.Object extractId(java.lang.Object) -> extractId
    670:670:java.lang.Class getDataClass() -> getDataClass
    674:680:com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    684:684:boolean isUpdatable() -> isUpdatable
    688:693:boolean isTableExists() -> isTableExists
    698:703:long countOf() -> countOf
    708:717:long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    722:723:void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    726:726:com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    730:750:void setObjectCache(boolean) -> setObjectCache
    753:770:void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    773:773:com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    777:780:void clearObjectCache() -> clearObjectCache
    786:790:void clearAllInternalObjectCaches() -> clearAllInternalObjectCaches
    793:793:java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    797:797:com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    801:801:com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    805:809:boolean idExists(java.lang.Object) -> idExists
    814:816:com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    820:822:void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    825:831:void setAutoCommit(boolean) -> setAutoCommit
    834:835:void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    838:842:boolean isAutoCommit() -> isAutoCommit
    847:847:boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    851:852:void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    855:856:void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    859:859:com.j256.ormlite.table.ObjectFactory getObjectFactory() -> getObjectFactory
    863:865:void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    871:871:com.j256.ormlite.table.DatabaseTableConfig getTableConfig() -> getTableConfig
    878:878:com.j256.ormlite.table.TableInfo getTableInfo() -> getTableInfo
    882:882:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    886:887:void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    894:895:void setTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setTableConfig
    907:907:com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    921:921:com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    926:929:void checkForInitialized() -> checkForInitialized
    932:949:com.j256.ormlite.dao.ForeignCollection makeEmptyForeignCollection(java.lang.Object,java.lang.String) -> makeEmptyForeignCollection
    954:958:com.j256.ormlite.dao.CloseableIterator createIterator(int) -> createIterator
    964:968:com.j256.ormlite.dao.CloseableIterator createIterator(com.j256.ormlite.stmt.PreparedQuery,int) -> createIterator
    973:991:java.util.List queryForMatching(java.lang.Object,boolean) -> queryForMatching
    996:1010:java.util.List queryForFieldValues(java.util.Map,boolean) -> queryForFieldValues
    57:57:java.util.Iterator iterator() -> iterator
    57:57:com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.BaseDaoImpl,int) -> access$000
    57:57:com.j256.ormlite.dao.CloseableIterator access$100(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.stmt.PreparedQuery,int) -> access$100
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.dao.BaseDaoImpl$1:
    74:74:java.util.List initialValue() -> initialValue
    71:71:java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$2 -> com.j256.ormlite.dao.BaseDaoImpl$2:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    492:492:java.util.Iterator iterator() -> iterator
    496:498:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$3 -> com.j256.ormlite.dao.BaseDaoImpl$3:
    com.j256.ormlite.stmt.PreparedQuery val$preparedQuery -> val$preparedQuery
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    508:508:java.util.Iterator iterator() -> iterator
    512:514:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.dao.BaseDaoImpl$4:
    907:907:java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.j256.ormlite.dao.BaseDaoImpl$5:
    921:921:java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.dao.BaseForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    java.lang.Object parentId -> parentId
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.lang.String orderColumn -> orderColumn
    boolean orderAscending -> orderAscending
    java.lang.Object parent -> parent
    54:56:boolean add(java.lang.Object) -> add
    66:76:boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    104:123:boolean retainAll(java.util.Collection) -> retainAll
    133:149:void clear() -> clear
    152:155:int update(java.lang.Object) -> update
    160:163:int refresh(java.lang.Object) -> refresh
    168:185:com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
    189:196:boolean addElement(java.lang.Object) -> addElement
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.dao.CloseableIterable:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.dao.CloseableIterator:
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object moveRelative(int) -> moveRelative
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.dao.CloseableWrappedIterable:
    void close() -> close
com.j256.ormlite.dao.CloseableWrappedIterableImpl -> com.j256.ormlite.dao.CloseableWrappedIterableImpl:
    com.j256.ormlite.dao.CloseableIterable iterable -> iterable
    com.j256.ormlite.dao.CloseableIterator iterator -> iterator
    22:22:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    28:33:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    37:41:void close() -> close
    12:12:java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.Dao -> com.j256.ormlite.dao.Dao:
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.dao.Dao$CreateOrUpdateStatus:
    boolean created -> created
    boolean updated -> updated
    int numLinesChanged -> numLinesChanged
    810:810:boolean isCreated() -> isCreated
    813:813:boolean isUpdated() -> isUpdated
    816:816:int getNumLinesChanged() -> getNumLinesChanged
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.dao.DaoManager:
    java.util.Map configMap -> configMap
    java.util.Map classMap -> classMap
    java.util.Map tableConfigMap -> tableConfigMap
    com.j256.ormlite.logger.Logger logger -> logger
    43:102:com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    109:116:com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    126:129:com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    138:148:com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> lookupDao
    168:172:void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDao
    179:183:void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> unregisterDao
    190:201:void registerDaoWithTableConfig(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDaoWithTableConfig
    207:212:void clearCache() -> clearCache
    218:226:void clearDaoCache() -> clearDaoCache
    234:244:void addCachedDatabaseConfigs(java.util.Collection) -> addCachedDatabaseConfigs
    247:251:void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToClassMap
    254:257:void removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> removeDaoToClassMap
    260:264:void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToTableMap
    267:274:com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> lookupDao
    279:286:com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> lookupDao
    291:306:java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> findConstructor
    314:329:java.lang.Object createDaoFromConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDaoFromConfig
    334:387:com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> doCreateDao
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.dao.DaoManager$ClassConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.Class clazz -> clazz
    402:405:int hashCode() -> hashCode
    409:418:boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    435:438:int hashCode() -> hashCode
    442:451:boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.dao.EagerForeignCollection:
    long serialVersionUID -> serialVersionUID
    java.util.List results -> results
    43:43:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    47:47:com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    51:51:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    55:55:com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    59:59:com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    64:64:com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    152:152:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    156:156:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    161:161:void close() -> close
    165:165:void closeLastIterator() -> closeLastIterator
    168:168:boolean isEager() -> isEager
    172:172:int size() -> size
    176:176:boolean isEmpty() -> isEmpty
    180:180:boolean contains(java.lang.Object) -> contains
    184:184:boolean containsAll(java.util.Collection) -> containsAll
    188:188:java.lang.Object[] toArray() -> toArray
    192:192:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    197:200:boolean add(java.lang.Object) -> add
    206:209:boolean addAll(java.util.Collection) -> addAll
    215:224:boolean remove(java.lang.Object) -> remove
    230:236:boolean removeAll(java.util.Collection) -> removeAll
    242:242:boolean retainAll(java.util.Collection) -> retainAll
    246:250:int updateAll() -> updateAll
    254:258:int refreshAll() -> refreshAll
    262:263:int refreshCollection() -> refreshCollection
    271:276:boolean equals(java.lang.Object) -> equals
    284:284:int hashCode() -> hashCode
    20:20:java.util.Iterator iterator() -> iterator
    20:20:java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> access$000
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.dao.EagerForeignCollection$1:
    int offset -> offset
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> this$0
    67:67:boolean hasNext() -> hasNext
    70:74:java.lang.Object first() -> first
    78:80:java.lang.Object next() -> next
    83:87:java.lang.Object nextThrow() -> nextThrow
    91:97:java.lang.Object current() -> current
    101:105:java.lang.Object previous() -> previous
    109:113:java.lang.Object moveRelative(int) -> moveRelative
    117:133:void remove() -> remove
    136:136:void close() -> close
    139:139:void closeQuietly() -> closeQuietly
    142:142:com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    145:146:void moveToNext() -> moveToNext
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.dao.ForeignCollection:
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int update(java.lang.Object) -> update
    int updateAll() -> updateAll
    int refresh(java.lang.Object) -> refresh
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean add(java.lang.Object) -> add
com.j256.ormlite.dao.GenericRawResults -> com.j256.ormlite.dao.GenericRawResults:
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    void close() -> close
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.dao.LazyForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    47:47:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    51:51:com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    55:55:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    60:62:com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    67:67:com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    71:72:com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    76:76:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    80:80:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    95:99:void closeLastIterator() -> closeLastIterator
    102:102:boolean isEager() -> isEager
    106:119:int size() -> size
    124:132:boolean isEmpty() -> isEmpty
    137:150:boolean contains(java.lang.Object) -> contains
    155:167:boolean containsAll(java.util.Collection) -> containsAll
    173:187:boolean remove(java.lang.Object) -> remove
    193:208:boolean removeAll(java.util.Collection) -> removeAll
    213:225:java.lang.Object[] toArray() -> toArray
    230:264:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    269:269:int updateAll() -> updateAll
    273:273:int refreshAll() -> refreshAll
    278:278:int refreshCollection() -> refreshCollection
    291:291:boolean equals(java.lang.Object) -> equals
    304:304:int hashCode() -> hashCode
    309:313:com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow(int) -> seperateIteratorThrow
    28:28:java.util.Iterator iterator() -> iterator
    28:28:com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.LazyForeignCollection,int) -> access$000
com.j256.ormlite.dao.LazyForeignCollection$1 -> com.j256.ormlite.dao.LazyForeignCollection$1:
    int val$flags -> val$flags
    com.j256.ormlite.dao.LazyForeignCollection this$0 -> this$0
    82:82:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    86:88:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    80:80:java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LruObjectCache -> com.j256.ormlite.dao.LruObjectCache:
    int capacity -> capacity
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    32:37:void registerClass(java.lang.Class) -> registerClass
    40:47:java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    51:55:void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    58:62:void clear(java.lang.Class) -> clear
    65:68:void clearAll() -> clearAll
    71:75:void remove(java.lang.Class,java.lang.Object) -> remove
    78:89:java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    93:97:int size(java.lang.Class) -> size
    102:106:int sizeAll() -> sizeAll
    110:114:java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap -> com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    133:133:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.dao.ObjectCache:
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
com.j256.ormlite.dao.RawRowMapper -> com.j256.ormlite.dao.RawRowMapper:
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.dao.RawRowObjectMapper -> com.j256.ormlite.dao.RawRowObjectMapper:
    java.lang.Object mapRow(java.lang.String[],com.j256.ormlite.field.DataType[],java.lang.Object[]) -> mapRow
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.dao.ReferenceObjectCache:
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    boolean useWeak -> useWeak
    37:37:com.j256.ormlite.dao.ReferenceObjectCache makeWeakCache() -> makeWeakCache
    44:44:com.j256.ormlite.dao.ReferenceObjectCache makeSoftCache() -> makeSoftCache
    48:53:void registerClass(java.lang.Class) -> registerClass
    56:71:java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    76:84:void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    87:91:void clear(java.lang.Class) -> clear
    94:97:void clearAll() -> clearAll
    100:104:void remove(java.lang.Class,java.lang.Object) -> remove
    107:118:java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    122:126:int size(java.lang.Class) -> size
    131:135:int sizeAll() -> sizeAll
    142:146:void cleanNullReferences(java.lang.Class) -> cleanNullReferences
    152:155:void cleanNullReferencesAll() -> cleanNullReferencesAll
    158:164:void cleanMap(java.util.Map) -> cleanMap
    167:171:java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.RuntimeExceptionDao -> com.j256.ormlite.dao.RuntimeExceptionDao:
    com.j256.ormlite.logger.Log$Level LOG_LEVEL -> LOG_LEVEL
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.logger.Logger logger -> logger
    64:65:com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    75:76:com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    84:87:java.lang.Object queryForId(java.lang.Object) -> queryForId
    96:99:java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    108:111:java.util.List queryForAll() -> queryForAll
    120:123:java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    132:135:java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    144:147:java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    156:159:java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    168:171:java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    180:183:java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    191:191:com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    198:198:com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    205:205:com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    213:216:java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    225:228:int create(java.lang.Object) -> create
    237:240:java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    249:252:com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    261:264:int update(java.lang.Object) -> update
    273:276:int updateId(java.lang.Object,java.lang.Object) -> updateId
    285:288:int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    297:300:int refresh(java.lang.Object) -> refresh
    309:312:int delete(java.lang.Object) -> delete
    321:324:int deleteById(java.lang.Object) -> deleteById
    333:336:int delete(java.util.Collection) -> delete
    345:348:int deleteIds(java.util.Collection) -> deleteIds
    357:360:int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    368:368:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    372:372:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    379:379:com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    386:386:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    393:393:com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    401:406:void closeLastIterator() -> closeLastIterator
    413:416:com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    425:428:com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    437:440:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    449:452:long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    461:464:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    474:477:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    486:489:com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    498:501:int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    510:513:int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    522:525:int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    534:537:java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    545:545:java.lang.String objectToString(java.lang.Object) -> objectToString
    553:556:boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    565:568:java.lang.Object extractId(java.lang.Object) -> extractId
    576:576:java.lang.Class getDataClass() -> getDataClass
    583:583:com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    590:590:boolean isUpdatable() -> isUpdatable
    598:601:boolean isTableExists() -> isTableExists
    610:613:long countOf() -> countOf
    622:625:long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    634:639:void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    646:649:com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    658:663:void setObjectCache(boolean) -> setObjectCache
    669:669:com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    677:682:void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    688:689:void clearObjectCache() -> clearObjectCache
    696:699:java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    708:711:com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    720:723:boolean idExists(java.lang.Object) -> idExists
    732:735:com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    744:749:void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    757:762:void setAutoCommit(boolean) -> setAutoCommit
    769:774:void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    782:785:boolean isAutoCommit() -> isAutoCommit
    794:797:boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    806:811:void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    818:823:void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    829:830:void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    836:836:com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    843:843:com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    847:848:void logMessage(java.lang.Exception,java.lang.String) -> logMessage
    42:42:java.util.Iterator iterator() -> iterator
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.db.BaseDatabaseType:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> DEFAULT_SEQUENCE_SUFFIX
    java.sql.Driver driver -> driver
    java.lang.String getDriverClassName() -> getDriverClassName
    39:49:void loadDriver() -> loadDriver
    52:53:void setDriver(java.sql.Driver) -> setDriver
    57:160:void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    166:171:void appendStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendStringType
    177:178:void appendLongStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongStringType
    184:185:void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    191:192:void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    198:199:void appendCharType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendCharType
    205:206:void appendByteType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteType
    212:213:void appendShortType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendShortType
    219:220:void appendIntegerType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendIntegerType
    226:227:void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    233:234:void appendFloatType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendFloatType
    240:241:void appendDoubleType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDoubleType
    247:248:void appendByteArrayType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteArrayType
    254:255:void appendSerializableType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendSerializableType
    261:262:void appendBigDecimalNumericType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBigDecimalNumericType
    268:273:void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> appendDefaultValue
    283:283:void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureGeneratedIdSequence
    296:296:void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    309:309:void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureId
    313:331:void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    338:338:boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    343:359:void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    363:363:void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    366:367:void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    370:371:void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    374:378:java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    383:383:java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    388:388:com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    392:392:boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    396:396:boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    400:400:boolean isLimitSqlSupported() -> isLimitSqlSupported
    404:404:boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    408:408:boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    412:412:boolean isLimitAfterSelect() -> isLimitAfterSelect
    416:417:void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    420:421:void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    425:425:void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    429:429:void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    432:432:boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    436:436:boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    440:440:boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    444:444:boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    448:448:java.lang.String getPingStatement() -> getPingStatement
    452:452:boolean isBatchUseTransaction() -> isBatchUseTransaction
    456:456:boolean isTruncateSupported() -> isTruncateSupported
    460:460:boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    464:464:boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    468:468:boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    472:472:boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    482:482:com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    486:487:void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
    496:496:void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> appendCanBeNull
    503:508:void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> addSingleUnique
com.j256.ormlite.db.BaseDatabaseType$1 -> com.j256.ormlite.db.BaseDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter:
    515:515:com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    518:519:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    523:524:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    527:527:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    531:532:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    535:535:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.db.BaseSqliteDatabaseType:
    com.j256.ormlite.field.FieldConverter booleanConverter -> booleanConverter
    30:35:void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    45:51:void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    55:55:boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    60:60:boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    66:66:boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    71:71:boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    77:83:com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    89:90:void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.j256.ormlite.db.BaseSqliteDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.db.DatabaseType:
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    java.lang.String getDatabaseName() -> getDatabaseName
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.db.SqliteAndroidDatabaseType:
    23:23:void loadDriver() -> loadDriver
    27:27:boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    33:33:java.lang.String getDriverClassName() -> getDriverClassName
    37:37:java.lang.String getDatabaseName() -> getDatabaseName
    43:44:void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    49:50:void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    55:59:com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    65:65:boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    70:70:boolean isBatchUseTransaction() -> isBatchUseTransaction
    76:76:com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.j256.ormlite.db.SqliteAndroidDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.field.BaseFieldConverter -> com.j256.ormlite.field.BaseFieldConverter:
    20:20:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    24:28:java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    38:38:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    42:42:boolean isStreamType() -> isStreamType
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.field.DataPersister:
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.field.DataPersisterManager:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> DEFAULT_ENUM_PERSISTER
    java.util.Map builtInMap -> builtInMap
    java.util.List registeredPersisters -> registeredPersisters
    53:61:void registerDataPersisters(com.j256.ormlite.field.DataPersister[]) -> registerDataPersisters
    67:68:void clear() -> clear
    78:109:com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> lookupForField
com.j256.ormlite.field.DataType -> com.j256.ormlite.field.DataType:
    com.j256.ormlite.field.DataType STRING -> STRING
    com.j256.ormlite.field.DataType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.DataType STRING_BYTES -> STRING_BYTES
    com.j256.ormlite.field.DataType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> BOOLEAN_OBJ
    com.j256.ormlite.field.DataType DATE -> DATE
    com.j256.ormlite.field.DataType DATE_LONG -> DATE_LONG
    com.j256.ormlite.field.DataType DATE_STRING -> DATE_STRING
    com.j256.ormlite.field.DataType CHAR -> CHAR
    com.j256.ormlite.field.DataType CHAR_OBJ -> CHAR_OBJ
    com.j256.ormlite.field.DataType BYTE -> BYTE
    com.j256.ormlite.field.DataType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.DataType BYTE_OBJ -> BYTE_OBJ
    com.j256.ormlite.field.DataType SHORT -> SHORT
    com.j256.ormlite.field.DataType SHORT_OBJ -> SHORT_OBJ
    com.j256.ormlite.field.DataType INTEGER -> INTEGER
    com.j256.ormlite.field.DataType INTEGER_OBJ -> INTEGER_OBJ
    com.j256.ormlite.field.DataType LONG -> LONG
    com.j256.ormlite.field.DataType LONG_OBJ -> LONG_OBJ
    com.j256.ormlite.field.DataType FLOAT -> FLOAT
    com.j256.ormlite.field.DataType FLOAT_OBJ -> FLOAT_OBJ
    com.j256.ormlite.field.DataType DOUBLE -> DOUBLE
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> DOUBLE_OBJ
    com.j256.ormlite.field.DataType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.DataType ENUM_STRING -> ENUM_STRING
    com.j256.ormlite.field.DataType ENUM_INTEGER -> ENUM_INTEGER
    com.j256.ormlite.field.DataType UUID -> UUID
    com.j256.ormlite.field.DataType BIG_INTEGER -> BIG_INTEGER
    com.j256.ormlite.field.DataType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> BIG_DECIMAL_NUMERIC
    com.j256.ormlite.field.DataType DATE_TIME -> DATE_TIME
    com.j256.ormlite.field.DataType SQL_DATE -> SQL_DATE
    com.j256.ormlite.field.DataType TIME_STAMP -> TIME_STAMP
    com.j256.ormlite.field.DataType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    com.j256.ormlite.field.DataType[] $VALUES -> $VALUES
    45:45:com.j256.ormlite.field.DataType[] values() -> values
    45:45:com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    224:224:com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.field.DatabaseField:
    java.lang.String DEFAULT_STRING -> DEFAULT_STRING
    int NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED -> NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String columnName() -> columnName
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean foreign() -> foreign
    boolean useGetSet() -> useGetSet
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    boolean persisted() -> persisted
    java.lang.String format() -> format
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass() -> persisterClass
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
    java.lang.String columnDefinition() -> columnDefinition
    boolean foreignAutoCreate() -> foreignAutoCreate
    boolean version() -> version
    java.lang.String foreignColumnName() -> foreignColumnName
    boolean readOnly() -> readOnly
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.field.DatabaseFieldConfig:
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> DEFAULT_DATA_TYPE
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    boolean DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING -> DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String fieldName -> fieldName
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DataType dataType -> dataType
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.String defaultValue -> defaultValue
    int width -> width
    boolean canBeNull -> canBeNull
    boolean id -> id
    boolean generatedId -> generatedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    boolean foreign -> foreign
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> foreignTableConfig
    boolean useGetSet -> useGetSet
    java.lang.Enum unknownEnumValue -> unknownEnumValue
    boolean throwIfNull -> throwIfNull
    boolean persisted -> persisted
    java.lang.String format -> format
    boolean unique -> unique
    boolean uniqueCombo -> uniqueCombo
    boolean index -> index
    java.lang.String indexName -> indexName
    boolean uniqueIndex -> uniqueIndex
    java.lang.String uniqueIndexName -> uniqueIndexName
    boolean foreignAutoRefresh -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass -> persisterClass
    boolean allowGeneratedIdInsert -> allowGeneratedIdInsert
    java.lang.String columnDefinition -> columnDefinition
    boolean foreignAutoCreate -> foreignAutoCreate
    boolean version -> version
    java.lang.String foreignColumnName -> foreignColumnName
    boolean readOnly -> readOnly
    boolean foreignCollection -> foreignCollection
    boolean foreignCollectionEager -> foreignCollectionEager
    int foreignCollectionMaxEagerLevel -> foreignCollectionMaxEagerLevel
    java.lang.String foreignCollectionColumnName -> foreignCollectionColumnName
    java.lang.String foreignCollectionOrderColumnName -> foreignCollectionOrderColumnName
    boolean foreignCollectionOrderAscending -> foreignCollectionOrderAscending
    java.lang.String foreignCollectionForeignFieldName -> foreignCollectionForeignFieldName
    107:107:java.lang.String getFieldName() -> getFieldName
    111:112:void setFieldName(java.lang.String) -> setFieldName
    118:118:java.lang.String getColumnName() -> getColumnName
    122:123:void setColumnName(java.lang.String) -> setColumnName
    129:129:com.j256.ormlite.field.DataType getDataType() -> getDataType
    133:134:void setDataType(com.j256.ormlite.field.DataType) -> setDataType
    140:143:com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    151:152:void setDataPersister(com.j256.ormlite.field.DataPersister) -> setDataPersister
    158:158:java.lang.String getDefaultValue() -> getDefaultValue
    162:163:void setDefaultValue(java.lang.String) -> setDefaultValue
    169:169:int getWidth() -> getWidth
    173:174:void setWidth(int) -> setWidth
    180:180:boolean isCanBeNull() -> isCanBeNull
    184:185:void setCanBeNull(boolean) -> setCanBeNull
    191:191:boolean isId() -> isId
    195:196:void setId(boolean) -> setId
    202:202:boolean isGeneratedId() -> isGeneratedId
    206:207:void setGeneratedId(boolean) -> setGeneratedId
    213:213:java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    217:218:void setGeneratedIdSequence(java.lang.String) -> setGeneratedIdSequence
    224:224:boolean isForeign() -> isForeign
    228:229:void setForeign(boolean) -> setForeign
    236:236:com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> getForeignTableConfig
    240:241:void setForeignTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setForeignTableConfig
    247:247:boolean isUseGetSet() -> isUseGetSet
    251:252:void setUseGetSet(boolean) -> setUseGetSet
    255:255:java.lang.Enum getUnknownEnumValue() -> getUnknownEnumValue
    259:260:void setUnknownEnumValue(java.lang.Enum) -> setUnknownEnumValue
    263:263:boolean isThrowIfNull() -> isThrowIfNull
    267:268:void setThrowIfNull(boolean) -> setThrowIfNull
    271:271:boolean isPersisted() -> isPersisted
    275:276:void setPersisted(boolean) -> setPersisted
    279:279:java.lang.String getFormat() -> getFormat
    283:284:void setFormat(java.lang.String) -> setFormat
    287:287:boolean isUnique() -> isUnique
    291:292:void setUnique(boolean) -> setUnique
    295:295:boolean isUniqueCombo() -> isUniqueCombo
    299:300:void setUniqueCombo(boolean) -> setUniqueCombo
    303:303:boolean isIndex() -> isIndex
    307:308:void setIndex(boolean) -> setIndex
    311:314:java.lang.String getIndexName(java.lang.String) -> getIndexName
    318:319:void setIndexName(java.lang.String) -> setIndexName
    322:322:boolean isUniqueIndex() -> isUniqueIndex
    326:327:void setUniqueIndex(boolean) -> setUniqueIndex
    330:333:java.lang.String getUniqueIndexName(java.lang.String) -> getUniqueIndexName
    337:338:void setUniqueIndexName(java.lang.String) -> setUniqueIndexName
    341:342:void setForeignAutoRefresh(boolean) -> setForeignAutoRefresh
    345:345:boolean isForeignAutoRefresh() -> isForeignAutoRefresh
    349:349:int getMaxForeignAutoRefreshLevel() -> getMaxForeignAutoRefreshLevel
    353:354:void setMaxForeignAutoRefreshLevel(int) -> setMaxForeignAutoRefreshLevel
    361:361:boolean isForeignCollection() -> isForeignCollection
    365:366:void setForeignCollection(boolean) -> setForeignCollection
    369:369:boolean isForeignCollectionEager() -> isForeignCollectionEager
    373:374:void setForeignCollectionEager(boolean) -> setForeignCollectionEager
    377:377:int getForeignCollectionMaxEagerLevel() -> getForeignCollectionMaxEagerLevel
    381:382:void setForeignCollectionMaxEagerLevel(int) -> setForeignCollectionMaxEagerLevel
    389:390:void setMaxEagerForeignCollectionLevel(int) -> setMaxEagerForeignCollectionLevel
    397:398:void setForeignCollectionMaxEagerForeignCollectionLevel(int) -> setForeignCollectionMaxEagerForeignCollectionLevel
    401:401:java.lang.String getForeignCollectionColumnName() -> getForeignCollectionColumnName
    405:406:void setForeignCollectionColumnName(java.lang.String) -> setForeignCollectionColumnName
    409:409:java.lang.String getForeignCollectionOrderColumnName() -> getForeignCollectionOrderColumnName
    417:418:void setForeignCollectionOrderColumn(java.lang.String) -> setForeignCollectionOrderColumn
    421:422:void setForeignCollectionOrderColumnName(java.lang.String) -> setForeignCollectionOrderColumnName
    425:425:boolean isForeignCollectionOrderAscending() -> isForeignCollectionOrderAscending
    429:430:void setForeignCollectionOrderAscending(boolean) -> setForeignCollectionOrderAscending
    433:433:java.lang.String getForeignCollectionForeignFieldName() -> getForeignCollectionForeignFieldName
    441:442:void setForeignCollectionForeignColumnName(java.lang.String) -> setForeignCollectionForeignColumnName
    445:446:void setForeignCollectionForeignFieldName(java.lang.String) -> setForeignCollectionForeignFieldName
    449:449:java.lang.Class getPersisterClass() -> getPersisterClass
    453:454:void setPersisterClass(java.lang.Class) -> setPersisterClass
    457:457:boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    461:462:void setAllowGeneratedIdInsert(boolean) -> setAllowGeneratedIdInsert
    465:465:java.lang.String getColumnDefinition() -> getColumnDefinition
    469:470:void setColumnDefinition(java.lang.String) -> setColumnDefinition
    473:473:boolean isForeignAutoCreate() -> isForeignAutoCreate
    477:478:void setForeignAutoCreate(boolean) -> setForeignAutoCreate
    481:481:boolean isVersion() -> isVersion
    485:486:void setVersion(boolean) -> setVersion
    489:489:java.lang.String getForeignColumnName() -> getForeignColumnName
    493:494:void setForeignColumnName(java.lang.String) -> setForeignColumnName
    497:497:boolean isReadOnly() -> isReadOnly
    501:502:void setReadOnly(boolean) -> setReadOnly
    512:533:com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> fromField
    542:561:java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> findGetMethod
    570:589:java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> findSetMethod
    594:634:com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> fromDatabaseField
    641:648:void postProcess() -> postProcess
    658:666:java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> findMatchingEnumVal
    671:696:com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> fromForeignCollection
    700:703:java.lang.String findIndexName(java.lang.String) -> findIndexName
    708:711:java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
    716:716:java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> methodFromField
com.j256.ormlite.field.DatabaseFieldConfigLoader -> com.j256.ormlite.field.DatabaseFieldConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    java.lang.String FIELD_NAME_FIELD_NAME -> FIELD_NAME_FIELD_NAME
    java.lang.String FIELD_NAME_COLUMN_NAME -> FIELD_NAME_COLUMN_NAME
    java.lang.String FIELD_NAME_DATA_PERSISTER -> FIELD_NAME_DATA_PERSISTER
    java.lang.String FIELD_NAME_DEFAULT_VALUE -> FIELD_NAME_DEFAULT_VALUE
    java.lang.String FIELD_NAME_WIDTH -> FIELD_NAME_WIDTH
    java.lang.String FIELD_NAME_CAN_BE_NULL -> FIELD_NAME_CAN_BE_NULL
    java.lang.String FIELD_NAME_ID -> FIELD_NAME_ID
    java.lang.String FIELD_NAME_GENERATED_ID -> FIELD_NAME_GENERATED_ID
    java.lang.String FIELD_NAME_GENERATED_ID_SEQUENCE -> FIELD_NAME_GENERATED_ID_SEQUENCE
    java.lang.String FIELD_NAME_FOREIGN -> FIELD_NAME_FOREIGN
    java.lang.String FIELD_NAME_USE_GET_SET -> FIELD_NAME_USE_GET_SET
    java.lang.String FIELD_NAME_UNKNOWN_ENUM_VALUE -> FIELD_NAME_UNKNOWN_ENUM_VALUE
    java.lang.String FIELD_NAME_THROW_IF_NULL -> FIELD_NAME_THROW_IF_NULL
    java.lang.String FIELD_NAME_FORMAT -> FIELD_NAME_FORMAT
    java.lang.String FIELD_NAME_UNIQUE -> FIELD_NAME_UNIQUE
    java.lang.String FIELD_NAME_UNIQUE_COMBO -> FIELD_NAME_UNIQUE_COMBO
    java.lang.String FIELD_NAME_INDEX -> FIELD_NAME_INDEX
    java.lang.String FIELD_NAME_INDEX_NAME -> FIELD_NAME_INDEX_NAME
    java.lang.String FIELD_NAME_UNIQUE_INDEX -> FIELD_NAME_UNIQUE_INDEX
    java.lang.String FIELD_NAME_UNIQUE_INDEX_NAME -> FIELD_NAME_UNIQUE_INDEX_NAME
    java.lang.String FIELD_NAME_FOREIGN_AUTO_REFRESH -> FIELD_NAME_FOREIGN_AUTO_REFRESH
    java.lang.String FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String FIELD_NAME_PERSISTER_CLASS -> FIELD_NAME_PERSISTER_CLASS
    java.lang.String FIELD_NAME_ALLOW_GENERATED_ID_INSERT -> FIELD_NAME_ALLOW_GENERATED_ID_INSERT
    java.lang.String FIELD_NAME_COLUMN_DEFINITION -> FIELD_NAME_COLUMN_DEFINITION
    java.lang.String FIELD_NAME_FOREIGN_AUTO_CREATE -> FIELD_NAME_FOREIGN_AUTO_CREATE
    java.lang.String FIELD_NAME_VERSION -> FIELD_NAME_VERSION
    java.lang.String FIELD_NAME_FOREIGN_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLUMN_NAME
    java.lang.String FIELD_NAME_READ_ONLY -> FIELD_NAME_READ_ONLY
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION -> FIELD_NAME_FOREIGN_COLLECTION
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_EAGER -> FIELD_NAME_FOREIGN_COLLECTION_EAGER
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME
    30:62:com.j256.ormlite.field.DatabaseFieldConfig fromReader(java.io.BufferedReader) -> fromReader
    71:75:void write(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> write
    124:298:void writeConfig(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> writeConfig
    304:421:void readField(com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String,java.lang.String) -> readField
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.field.FieldConverter:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    boolean isStreamType() -> isStreamType
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.FieldType -> com.j256.ormlite.field.FieldType:
    java.lang.String FOREIGN_ID_FIELD_SUFFIX -> FOREIGN_ID_FIELD_SUFFIX
    boolean DEFAULT_VALUE_BOOLEAN -> DEFAULT_VALUE_BOOLEAN
    byte DEFAULT_VALUE_BYTE -> DEFAULT_VALUE_BYTE
    char DEFAULT_VALUE_CHAR -> DEFAULT_VALUE_CHAR
    short DEFAULT_VALUE_SHORT -> DEFAULT_VALUE_SHORT
    int DEFAULT_VALUE_INT -> DEFAULT_VALUE_INT
    long DEFAULT_VALUE_LONG -> DEFAULT_VALUE_LONG
    float DEFAULT_VALUE_FLOAT -> DEFAULT_VALUE_FLOAT
    double DEFAULT_VALUE_DOUBLE -> DEFAULT_VALUE_DOUBLE
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.String tableName -> tableName
    java.lang.reflect.Field field -> field
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> fieldConfig
    boolean isId -> isId
    boolean isGeneratedId -> isGeneratedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    java.lang.reflect.Method fieldGetMethod -> fieldGetMethod
    java.lang.reflect.Method fieldSetMethod -> fieldSetMethod
    java.lang.Class parentClass -> parentClass
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object dataTypeConfigObj -> dataTypeConfigObj
    com.j256.ormlite.field.FieldConverter fieldConverter -> fieldConverter
    com.j256.ormlite.field.FieldType foreignIdField -> foreignIdField
    com.j256.ormlite.table.TableInfo foreignTableInfo -> foreignTableInfo
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    com.j256.ormlite.dao.BaseDaoImpl foreignDao -> foreignDao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    java.lang.ThreadLocal threadLevelCounters -> threadLevelCounters
    284:412:void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> configDaoInformation
    415:415:java.lang.reflect.Field getField() -> getField
    419:419:java.lang.String getTableName() -> getTableName
    423:423:java.lang.String getFieldName() -> getFieldName
    430:430:java.lang.Class getType() -> getType
    434:434:java.lang.String getColumnName() -> getColumnName
    438:438:com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    442:442:java.lang.Object getDataTypeConfigObj() -> getDataTypeConfigObj
    446:446:com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    453:453:java.lang.Object getDefaultValue() -> getDefaultValue
    457:457:int getWidth() -> getWidth
    461:461:boolean isCanBeNull() -> isCanBeNull
    469:469:boolean isId() -> isId
    477:477:boolean isGeneratedId() -> isGeneratedId
    487:487:boolean isGeneratedIdSequence() -> isGeneratedIdSequence
    494:494:java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    498:498:boolean isForeign() -> isForeign
    506:590:void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> assignField
    596:601:java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
    610:627:java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> extractRawJavaFieldValue
    636:643:java.lang.Object extractJavaFieldValue(java.lang.Object) -> extractJavaFieldValue
    650:650:java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> extractJavaFieldToSqlArgValue
    657:660:java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> convertJavaFieldToSqlArgValue
    668:671:java.lang.Object convertStringToJavaField(java.lang.String,int) -> convertStringToJavaField
    679:682:java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    690:690:com.j256.ormlite.field.FieldType getForeignIdField() -> getForeignIdField
    697:697:boolean isEscapedValue() -> isEscapedValue
    701:701:java.lang.Enum getUnknownEnumVal() -> getUnknownEnumVal
    708:708:java.lang.String getFormat() -> getFormat
    712:712:boolean isUnique() -> isUnique
    716:716:boolean isUniqueCombo() -> isUniqueCombo
    720:720:java.lang.String getIndexName() -> getIndexName
    724:724:java.lang.String getUniqueIndexName() -> getUniqueIndexName
    731:731:boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    738:749:boolean isComparable() -> isComparable
    757:757:boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    764:764:boolean isForeignCollection() -> isForeignCollection
    779:805:com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object) -> buildForeignCollection
    813:838:java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> resultToJava
    845:845:boolean isSelfGeneratedId() -> isSelfGeneratedId
    852:852:boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    859:859:java.lang.String getColumnDefinition() -> getColumnDefinition
    866:866:boolean isForeignAutoCreate() -> isForeignAutoCreate
    873:873:boolean isVersion() -> isVersion
    880:880:java.lang.Object generateId() -> generateId
    887:887:boolean isReadOnly() -> isReadOnly
    896:900:java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> getFieldValueIfNotDefault
    908:909:boolean isObjectsFieldValueDefault(java.lang.Object) -> isObjectsFieldValueDefault
    917:934:java.lang.Object getJavaDefaultValueDefault() -> getJavaDefaultValueDefault
    943:944:int createWithForeignDao(java.lang.Object) -> createWithForeignDao
    952:957:com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> createFieldType
    963:967:boolean equals(java.lang.Object) -> equals
    973:973:int hashCode() -> hashCode
    978:978:java.lang.String toString() -> toString
    987:990:boolean isFieldValueDefault(java.lang.Object) -> isFieldValueDefault
    1000:1020:com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> findForeignFieldType
    1028:1069:void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> assignDataType
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.field.FieldType$1:
    82:82:com.j256.ormlite.field.FieldType$LevelCounters initialValue() -> initialValue
    79:79:java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.field.FieldType$LevelCounters:
    int autoRefreshLevel -> autoRefreshLevel
    int autoRefreshLevelMax -> autoRefreshLevelMax
    int foreignCollectionLevel -> foreignCollectionLevel
    int foreignCollectionLevelMax -> foreignCollectionLevelMax
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.field.ForeignCollectionField:
    int MAX_EAGER_LEVEL -> MAX_EAGER_LEVEL
    boolean eager() -> eager
    int maxEagerForeignCollectionLevel() -> maxEagerForeignCollectionLevel
    int maxEagerLevel() -> maxEagerLevel
    java.lang.String columnName() -> columnName
    java.lang.String orderColumnName() -> orderColumnName
    boolean orderAscending() -> orderAscending
    java.lang.String foreignColumnName() -> foreignColumnName
    java.lang.String foreignFieldName() -> foreignFieldName
com.j256.ormlite.field.SqlType -> com.j256.ormlite.field.SqlType:
    com.j256.ormlite.field.SqlType STRING -> STRING
    com.j256.ormlite.field.SqlType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.SqlType DATE -> DATE
    com.j256.ormlite.field.SqlType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.SqlType CHAR -> CHAR
    com.j256.ormlite.field.SqlType BYTE -> BYTE
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.SqlType SHORT -> SHORT
    com.j256.ormlite.field.SqlType INTEGER -> INTEGER
    com.j256.ormlite.field.SqlType LONG -> LONG
    com.j256.ormlite.field.SqlType FLOAT -> FLOAT
    com.j256.ormlite.field.SqlType DOUBLE -> DOUBLE
    com.j256.ormlite.field.SqlType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.SqlType BLOB -> BLOB
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.SqlType OTHER -> OTHER
    com.j256.ormlite.field.SqlType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.SqlType[] $VALUES -> $VALUES
    13:13:com.j256.ormlite.field.SqlType[] values() -> values
    13:13:com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.field.types.BaseDataType:
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Class[] classes -> classes
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    55:65:boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    69:72:java.lang.Class getPrimaryClass() -> getPrimaryClass
    81:81:java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    85:85:com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    89:89:java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    93:93:java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    98:98:java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    102:102:boolean isValidGeneratedType() -> isValidGeneratedType
    107:107:boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    111:111:boolean isEscapedValue() -> isEscapedValue
    115:115:boolean isPrimitive() -> isPrimitive
    119:119:boolean isComparable() -> isComparable
    123:123:boolean isAppropriateId() -> isAppropriateId
    127:127:boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    131:131:boolean isSelfGeneratedId() -> isSelfGeneratedId
    135:135:java.lang.Object generateId() -> generateId
    139:139:int getDefaultWidth() -> getDefaultWidth
    143:148:boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    153:153:boolean isValidForVersion() -> isValidForVersion
    157:157:java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    161:161:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.field.types.BaseDateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    28:35:com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> convertDateStringConfig
    40:41:java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> parseDateString
    46:48:java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> normalizeDateString
    73:73:boolean isValidForVersion() -> isValidForVersion
    78:84:java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    90:90:boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig:
    java.lang.ThreadLocal threadLocal -> threadLocal
    java.lang.String dateFormatStr -> dateFormatStr
    63:63:java.text.DateFormat getDateFormat() -> getDateFormat
    67:67:java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$0 -> this$0
    55:55:java.text.DateFormat initialValue() -> initialValue
    52:52:java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.field.types.BaseEnumType:
    22:27:java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> enumVal
    33:33:boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.field.types.BigDecimalNumericType:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> singleTon
    22:22:com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> getSingleton
    40:42:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    49:49:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    54:54:boolean isAppropriateId() -> isAppropriateId
    59:59:boolean isEscapedValue() -> isEscapedValue
    64:64:java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.field.types.BigDecimalStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> singleTon
    24:24:com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> getSingleton
    41:43:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    50:50:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    56:58:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    65:66:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    71:71:int getDefaultWidth() -> getDefaultWidth
    76:76:boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.field.types.BigIntegerType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigIntegerType singleTon -> singleTon
    23:23:com.j256.ormlite.field.types.BigIntegerType getSingleton() -> getSingleton
    40:42:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    49:49:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    55:57:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    64:65:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    70:70:int getDefaultWidth() -> getDefaultWidth
    75:75:boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.field.types.BooleanObjectType:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
    32:32:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    37:37:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    42:42:boolean isEscapedValue() -> isEscapedValue
    47:47:boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.field.types.BooleanType:
    com.j256.ormlite.field.types.BooleanType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
    31:31:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.field.types.ByteArrayType:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> singleTon
    20:20:com.j256.ormlite.field.types.ByteArrayType getSingleton() -> getSingleton
    36:36:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    41:41:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    46:46:boolean isAppropriateId() -> isAppropriateId
    51:51:boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    56:61:boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    67:67:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    72:72:java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.field.types.ByteObjectType:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
    32:32:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    37:37:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    42:42:boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.field.types.ByteType:
    com.j256.ormlite.field.types.ByteType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.ByteType getSingleton() -> getSingleton
    31:31:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.field.types.CharType:
    com.j256.ormlite.field.types.CharType singleTon -> singleTon
    16:16:com.j256.ormlite.field.types.CharType getSingleton() -> getSingleton
    32:37:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    43:43:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.field.types.CharacterObjectType:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
    32:36:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    41:41:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.field.types.DateLongType:
    com.j256.ormlite.field.types.DateLongType singleTon -> singleTon
    25:25:com.j256.ormlite.field.types.DateLongType getSingleton() -> getSingleton
    42:44:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    51:51:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    56:56:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    61:62:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    67:67:boolean isEscapedValue() -> isEscapedValue
    72:72:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    77:77:java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.field.types.DateStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.DateStringType singleTon -> singleTon
    25:25:com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
    41:46:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    53:53:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    58:63:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    70:71:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    76:80:java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    86:86:int getDefaultWidth() -> getDefaultWidth
    91:91:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    96:96:java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateTimeType -> com.j256.ormlite.field.types.DateTimeType:
    com.j256.ormlite.field.types.DateTimeType singleTon -> singleTon
    java.lang.Class dateTimeClass -> dateTimeClass
    java.lang.reflect.Method getMillisMethod -> getMillisMethod
    java.lang.reflect.Constructor millisConstructor -> millisConstructor
    java.lang.String[] associatedClassNames -> associatedClassNames
    41:41:com.j256.ormlite.field.types.DateTimeType getSingleton() -> getSingleton
    46:46:java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    52:59:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    65:65:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    70:70:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    76:79:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    85:85:boolean isEscapedValue() -> isEscapedValue
    90:90:boolean isAppropriateId() -> isAppropriateId
    96:99:java.lang.Class getPrimaryClass() -> getPrimaryClass
    104:108:java.lang.reflect.Method getMillisMethod() -> getMillisMethod
    112:116:java.lang.reflect.Constructor getConstructor() -> getConstructor
    120:123:java.lang.Class getDateTimeClass() -> getDateTimeClass
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.field.types.DateType:
    com.j256.ormlite.field.types.DateType singleTon -> singleTon
    26:26:com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
    39:43:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    50:50:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    55:56:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    61:62:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    67:67:boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    74:74:com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.field.types.DoubleObjectType:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
    32:32:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    37:37:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    42:42:boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.field.types.DoubleType:
    com.j256.ormlite.field.types.DoubleType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.DoubleType getSingleton() -> getSingleton
    31:31:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.field.types.EnumIntegerType:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> singleTon
    22:22:com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> getSingleton
    38:38:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    43:43:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    48:58:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    64:65:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    70:70:boolean isEscapedValue() -> isEscapedValue
    75:83:java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    88:88:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    93:93:java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.field.types.EnumStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.EnumStringType singleTon -> singleTon
    23:23:com.j256.ormlite.field.types.EnumStringType getSingleton() -> getSingleton
    39:39:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    44:53:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    59:59:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    64:65:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    70:78:java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    83:83:int getDefaultWidth() -> getDefaultWidth
    88:88:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.field.types.FloatObjectType:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
    32:32:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    37:37:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    42:42:boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.field.types.FloatType:
    com.j256.ormlite.field.types.FloatType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.FloatType getSingleton() -> getSingleton
    31:31:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.field.types.IntType:
    com.j256.ormlite.field.types.IntType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.IntType getSingleton() -> getSingleton
    31:31:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.field.types.IntegerObjectType:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
    32:32:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    37:37:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    42:42:java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    47:47:boolean isEscapedValue() -> isEscapedValue
    52:52:boolean isValidGeneratedType() -> isValidGeneratedType
    57:57:boolean isValidForVersion() -> isValidForVersion
    62:65:java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.field.types.LongObjectType:
    com.j256.ormlite.field.types.LongObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
    32:32:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    37:37:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    42:42:java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    47:47:boolean isEscapedValue() -> isEscapedValue
    52:52:boolean isValidGeneratedType() -> isValidGeneratedType
    57:57:boolean isValidForVersion() -> isValidForVersion
    62:65:java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.field.types.LongStringType:
    com.j256.ormlite.field.types.LongStringType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.LongStringType getSingleton() -> getSingleton
    31:31:boolean isAppropriateId() -> isAppropriateId
    36:36:int getDefaultWidth() -> getDefaultWidth
    41:41:java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.field.types.LongType:
    com.j256.ormlite.field.types.LongType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.LongType getSingleton() -> getSingleton
    31:31:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.field.types.SerializableType:
    com.j256.ormlite.field.types.SerializableType singleTon -> singleTon
    28:28:com.j256.ormlite.field.types.SerializableType getSingleton() -> getSingleton
    48:48:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    53:53:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    58:73:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    80:97:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    104:104:boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    110:110:boolean isStreamType() -> isStreamType
    115:115:boolean isComparable() -> isComparable
    120:120:boolean isAppropriateId() -> isAppropriateId
    125:125:boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    130:130:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    135:135:java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.field.types.ShortObjectType:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> singleTon
    19:19:com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
    32:32:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    37:37:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    42:42:boolean isEscapedValue() -> isEscapedValue
    47:47:boolean isValidForVersion() -> isValidForVersion
    52:55:java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.field.types.ShortType:
    com.j256.ormlite.field.types.ShortType singleTon -> singleTon
    15:15:com.j256.ormlite.field.types.ShortType getSingleton() -> getSingleton
    31:31:boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SqlDateType -> com.j256.ormlite.field.types.SqlDateType:
    com.j256.ormlite.field.types.SqlDateType singleTon -> singleTon
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> sqlDateFormatConfig
    25:25:com.j256.ormlite.field.types.SqlDateType getSingleton() -> getSingleton
    41:42:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    47:48:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    53:53:com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
    58:58:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    63:63:boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.field.types.StringBytesType:
    java.lang.String DEFAULT_STRING_BYTES_CHARSET_NAME -> DEFAULT_STRING_BYTES_CHARSET_NAME
    com.j256.ormlite.field.types.StringBytesType singleTon -> singleTon
    23:23:com.j256.ormlite.field.types.StringBytesType getSingleton() -> getSingleton
    39:39:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    44:44:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    49:55:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    61:67:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    73:73:boolean isAppropriateId() -> isAppropriateId
    78:78:boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    83:83:java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    88:88:java.lang.Class getPrimaryClass() -> getPrimaryClass
    92:95:java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> getCharsetName
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.field.types.StringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.StringType singleTon -> singleTon
    21:21:com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
    34:34:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    39:39:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    44:44:int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.TimeStampType -> com.j256.ormlite.field.types.TimeStampType:
    com.j256.ormlite.field.types.TimeStampType singleTon -> singleTon
    18:18:com.j256.ormlite.field.types.TimeStampType getSingleton() -> getSingleton
    35:35:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    41:41:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    46:46:boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    51:57:java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.field.types.UuidType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.UuidType singleTon -> singleTon
    23:23:com.j256.ormlite.field.types.UuidType getSingleton() -> getSingleton
    40:42:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    49:49:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    54:58:java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    65:66:java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    71:71:boolean isValidGeneratedType() -> isValidGeneratedType
    76:76:boolean isSelfGeneratedId() -> isSelfGeneratedId
    81:81:java.lang.Object generateId() -> generateId
    86:86:int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.field.types.VoidType:
    21:21:java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    26:26:java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    31:31:boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.logger.LocalLog:
    java.lang.String LOCAL_LOG_LEVEL_PROPERTY -> LOCAL_LOG_LEVEL_PROPERTY
    java.lang.String LOCAL_LOG_FILE_PROPERTY -> LOCAL_LOG_FILE_PROPERTY
    java.lang.String LOCAL_LOG_PROPERTIES_FILE -> LOCAL_LOG_PROPERTIES_FILE
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.ThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    java.io.PrintStream printStream -> printStream
    java.util.List classLevels -> classLevels
    java.lang.String className -> className
    com.j256.ormlite.logger.Log$Level level -> level
    111:120:void openLogFile(java.lang.String) -> openLogFile
    123:123:boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    127:128:void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    131:132:void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    138:139:void flush() -> flush
    145:160:java.util.List readLevelResourceFile(java.io.InputStream) -> readLevelResourceFile
    164:190:java.util.List configureClassLevels(java.io.InputStream) -> configureClassLevels
    194:207:void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> printMessage
com.j256.ormlite.logger.LocalLog$1 -> com.j256.ormlite.logger.LocalLog$1:
    51:51:java.text.DateFormat initialValue() -> initialValue
    48:48:java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.logger.LocalLog$PatternLevel:
    java.util.regex.Pattern pattern -> pattern
    com.j256.ormlite.logger.Log$Level level -> level
com.j256.ormlite.logger.Log -> com.j256.ormlite.logger.Log:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.logger.Log$Level:
    com.j256.ormlite.logger.Log$Level TRACE -> TRACE
    com.j256.ormlite.logger.Log$Level DEBUG -> DEBUG
    com.j256.ormlite.logger.Log$Level INFO -> INFO
    com.j256.ormlite.logger.Log$Level WARNING -> WARNING
    com.j256.ormlite.logger.Log$Level ERROR -> ERROR
    com.j256.ormlite.logger.Log$Level FATAL -> FATAL
    int level -> level
    com.j256.ormlite.logger.Log$Level[] $VALUES -> $VALUES
    28:28:com.j256.ormlite.logger.Log$Level[] values() -> values
    28:28:com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    55:55:boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> isEnabled
com.j256.ormlite.logger.Logger -> com.j256.ormlite.logger.Logger:
    java.lang.String ARG_STRING -> ARG_STRING
    int ARG_STRING_LENGTH -> ARG_STRING_LENGTH
    java.lang.Object UNKNOWN_ARG -> UNKNOWN_ARG
    com.j256.ormlite.logger.Log log -> log
    36:36:boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    43:44:void trace(java.lang.String) -> trace
    50:51:void trace(java.lang.String,java.lang.Object) -> trace
    57:58:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    64:65:void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    75:76:void trace(java.lang.String,java.lang.Object[]) -> trace
    82:83:void trace(java.lang.Throwable,java.lang.String) -> trace
    89:90:void trace(java.lang.Throwable,java.lang.String,java.lang.Object) -> trace
    96:97:void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    103:104:void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    114:115:void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    121:122:void debug(java.lang.String) -> debug
    128:129:void debug(java.lang.String,java.lang.Object) -> debug
    135:136:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    142:143:void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    153:154:void debug(java.lang.String,java.lang.Object[]) -> debug
    160:161:void debug(java.lang.Throwable,java.lang.String) -> debug
    167:168:void debug(java.lang.Throwable,java.lang.String,java.lang.Object) -> debug
    174:175:void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    181:182:void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    192:193:void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    199:200:void info(java.lang.String) -> info
    206:207:void info(java.lang.String,java.lang.Object) -> info
    213:214:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    220:221:void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    227:228:void info(java.lang.String,java.lang.Object[]) -> info
    234:235:void info(java.lang.Throwable,java.lang.String) -> info
    241:242:void info(java.lang.Throwable,java.lang.String,java.lang.Object) -> info
    248:249:void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> info
    255:256:void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    262:263:void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    269:270:void warn(java.lang.String) -> warn
    276:277:void warn(java.lang.String,java.lang.Object) -> warn
    283:284:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    290:291:void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    297:298:void warn(java.lang.String,java.lang.Object[]) -> warn
    304:305:void warn(java.lang.Throwable,java.lang.String) -> warn
    311:312:void warn(java.lang.Throwable,java.lang.String,java.lang.Object) -> warn
    318:319:void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    325:326:void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    332:333:void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    339:340:void error(java.lang.String) -> error
    346:347:void error(java.lang.String,java.lang.Object) -> error
    353:354:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    360:361:void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    367:368:void error(java.lang.String,java.lang.Object[]) -> error
    374:375:void error(java.lang.Throwable,java.lang.String) -> error
    381:382:void error(java.lang.Throwable,java.lang.String,java.lang.Object) -> error
    388:389:void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> error
    395:396:void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    402:403:void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    409:410:void fatal(java.lang.String) -> fatal
    416:417:void fatal(java.lang.String,java.lang.Object) -> fatal
    423:424:void fatal(java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    430:431:void fatal(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    437:438:void fatal(java.lang.String,java.lang.Object[]) -> fatal
    444:445:void fatal(java.lang.Throwable,java.lang.String) -> fatal
    451:452:void fatal(java.lang.Throwable,java.lang.String,java.lang.Object) -> fatal
    458:459:void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    465:466:void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    472:473:void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> fatal
    479:480:void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    486:487:void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object) -> log
    493:494:void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object) -> log
    500:501:void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    507:508:void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object[]) -> log
    514:515:void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String) -> log
    521:522:void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object) -> log
    528:529:void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> log
    535:536:void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    542:543:void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    547:555:void innerLog(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> innerLog
    561:600:java.lang.String buildFullMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> buildFullMessage
    605:616:void appendArg(java.lang.StringBuilder,java.lang.Object) -> appendArg
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.logger.LoggerFactory:
    java.lang.String LOG_TYPE_SYSTEM_PROPERTY -> LOG_TYPE_SYSTEM_PROPERTY
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> logType
    31:31:com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> getLogger
    38:41:com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> getLogger
    49:53:java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    63:80:com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> findLogType
com.j256.ormlite.logger.LoggerFactory$1 -> com.j256.ormlite.logger.LoggerFactory$1:
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.logger.LoggerFactory$LogType:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> ANDROID
    com.j256.ormlite.logger.LoggerFactory$LogType SLF4J -> SLF4J
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> COMMONS_LOGGING
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J2 -> LOG4J2
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> LOG4J
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> LOCAL
    java.lang.String detectClassName -> detectClassName
    java.lang.String logClassName -> logClassName
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> $VALUES
    86:86:com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    86:86:com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    124:130:com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    138:147:boolean isAvailable() -> isAvailable
    155:158:com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> createLogFromClassName
    166:169:boolean isAvailableTestClass() -> isAvailableTestClass
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.logger.LoggerFactory$LogType$1:
    100:100:com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    105:105:boolean isAvailable() -> isAvailable
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.misc.BaseDaoEnabled:
    com.j256.ormlite.dao.Dao dao -> dao
    34:37:int create() -> create
    44:47:int refresh() -> refresh
    54:57:int update() -> update
    64:67:int updateId(java.lang.Object) -> updateId
    74:77:int delete() -> delete
    85:91:java.lang.String objectToString() -> objectToString
    98:101:java.lang.Object extractId() -> extractId
    108:111:boolean objectsEqual(java.lang.Object) -> objectsEqual
    120:121:void setDao(com.j256.ormlite.dao.Dao) -> setDao
    128:128:com.j256.ormlite.dao.Dao getDao() -> getDao
    132:135:void checkForDao() -> checkForDao
com.j256.ormlite.misc.JavaxPersistence -> com.j256.ormlite.misc.JavaxPersistence:
    28:204:com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    212:232:java.lang.String getEntityName(java.lang.Class) -> getEntityName
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.misc.SqlExceptionUtil:
    22:24:java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> create
com.j256.ormlite.misc.TransactionManager -> com.j256.ormlite.misc.TransactionManager:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String SAVE_POINT_PREFIX -> SAVE_POINT_PREFIX
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.util.concurrent.atomic.AtomicInteger savePointCounter -> savePointCounter
    89:92:void initialize() -> initialize
    112:112:java.lang.Object callInTransaction(java.util.concurrent.Callable) -> callInTransaction
    121:128:java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable) -> callInTransaction
    137:137:java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    146:198:java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,boolean,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    204:205:void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    208:215:void commit(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> commit
    218:225:void rollBack(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> rollBack
com.j256.ormlite.misc.VersionUtils -> com.j256.ormlite.misc.VersionUtils:
    java.lang.String CORE_VERSION -> CORE_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    boolean thrownOnErrors -> thrownOnErrors
    java.lang.String coreVersion -> coreVersion
    27:28:void checkCoreVersusJdbcVersions(java.lang.String) -> checkCoreVersusJdbcVersions
    34:35:void checkCoreVersusAndroidVersions(java.lang.String) -> checkCoreVersusAndroidVersions
    38:38:java.lang.String getCoreVersion() -> getCoreVersion
    45:46:void setThrownOnErrors(boolean) -> setThrownOnErrors
    52:66:void logVersionWarnings(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> logVersionWarnings
    69:73:void warning(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[]) -> warning
    79:82:com.j256.ormlite.logger.Logger getLogger() -> getLogger
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.stmt.ArgumentHolder:
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.stmt.BaseArgumentHolder:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
    44:44:java.lang.String getColumnName() -> getColumnName
    48:57:void setMetaInfo(java.lang.String) -> setMetaInfo
    60:69:void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    72:74:void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    77:89:java.lang.Object getSqlArgValue() -> getSqlArgValue
    94:94:com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
    98:98:com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    103:115:java.lang.String toString() -> toString
com.j256.ormlite.stmt.ColumnArg -> com.j256.ormlite.stmt.ColumnArg:
    java.lang.String tableName -> tableName
    java.lang.String columnName -> columnName
    38:38:java.lang.String getTableName() -> getTableName
    42:42:java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.DeleteBuilder -> com.j256.ormlite.stmt.DeleteBuilder:
    33:33:com.j256.ormlite.stmt.PreparedDelete prepare() -> prepare
    40:40:int delete() -> delete
    49:50:void clear() -> clear
    55:56:void reset() -> reset
    60:63:void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    68:68:void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.stmt.GenericRowMapper:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.NullArgHolder -> com.j256.ormlite.stmt.NullArgHolder:
    19:19:java.lang.String getColumnName() -> getColumnName
    23:23:void setValue(java.lang.Object) -> setValue
    28:28:void setMetaInfo(java.lang.String) -> setMetaInfo
    32:32:void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    36:36:void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    39:39:java.lang.Object getSqlArgValue() -> getSqlArgValue
    44:44:com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    48:48:com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.stmt.PreparedDelete:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.stmt.PreparedQuery:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.stmt.PreparedStmt:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.stmt.PreparedUpdate:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.stmt.QueryBuilder:
    com.j256.ormlite.field.FieldType idField -> idField
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> resultFieldTypes
    boolean distinct -> distinct
    boolean selectIdColumn -> selectIdColumn
    java.util.List selectColumnList -> selectColumnList
    java.util.List selectRawList -> selectRawList
    java.util.List orderByList -> orderByList
    java.lang.String orderByRaw -> orderByRaw
    com.j256.ormlite.stmt.ArgumentHolder[] orderByArgs -> orderByArgs
    java.util.List groupByList -> groupByList
    java.lang.String groupByRaw -> groupByRaw
    boolean isInnerQuery -> isInnerQuery
    boolean isCountOfQuery -> isCountOfQuery
    java.lang.String having -> having
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    java.util.List joinList -> joinList
    67:68:void enableInnerQuery() -> enableInnerQuery
    74:81:int getSelectColumnCount() -> getSelectColumnCount
    89:96:java.util.List getSelectColumns() -> getSelectColumns
    106:106:com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    120:126:com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.String[]) -> selectColumns
    134:140:com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.Iterable) -> selectColumns
    149:155:com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> selectRaw
    168:177:com.j256.ormlite.stmt.QueryBuilder groupBy(java.lang.String) -> groupBy
    184:185:com.j256.ormlite.stmt.QueryBuilder groupByRaw(java.lang.String) -> groupByRaw
    193:201:com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> orderBy
    211:211:com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String) -> orderByRaw
    224:226:com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> orderByRaw
    238:240:com.j256.ormlite.stmt.QueryBuilder distinct() -> distinct
    248:248:com.j256.ormlite.stmt.QueryBuilder limit(int) -> limit
    255:256:com.j256.ormlite.stmt.QueryBuilder limit(java.lang.Long) -> limit
    264:264:com.j256.ormlite.stmt.QueryBuilder offset(int) -> offset
    278:282:com.j256.ormlite.stmt.QueryBuilder offset(java.lang.Long) -> offset
    293:294:com.j256.ormlite.stmt.QueryBuilder setCountOf(boolean) -> setCountOf
    301:302:com.j256.ormlite.stmt.QueryBuilder having(java.lang.String) -> having
    316:317:com.j256.ormlite.stmt.QueryBuilder join(com.j256.ormlite.stmt.QueryBuilder) -> join
    324:325:com.j256.ormlite.stmt.QueryBuilder joinOr(com.j256.ormlite.stmt.QueryBuilder) -> joinOr
    344:345:com.j256.ormlite.stmt.QueryBuilder leftJoin(com.j256.ormlite.stmt.QueryBuilder) -> leftJoin
    353:354:com.j256.ormlite.stmt.QueryBuilder leftJoinOr(com.j256.ormlite.stmt.QueryBuilder) -> leftJoinOr
    361:361:java.util.List query() -> query
    368:368:com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    375:375:java.lang.Object queryForFirst() -> queryForFirst
    382:382:java.lang.String[] queryRawFirst() -> queryRawFirst
    389:389:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    397:398:long countOf() -> countOf
    407:408:void clear() -> clear
    412:432:void reset() -> reset
    436:464:void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    468:468:com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    474:488:boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    494:503:void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    507:507:boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    511:517:void setAddTableName(boolean) -> setAddTableName
    524:530:void addJoinInfo(java.lang.String,com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> addJoinInfo
    536:554:void matchJoinedFields(com.j256.ormlite.stmt.QueryBuilder$JoinInfo,com.j256.ormlite.stmt.QueryBuilder) -> matchJoinedFields
    559:561:void addSelectColumnToList(java.lang.String) -> addSelectColumnToList
    564:581:void appendJoinSql(java.lang.StringBuilder) -> appendJoinSql
    584:594:void appendSelectRaw(java.lang.StringBuilder) -> appendSelectRaw
    598:647:void appendColumns(java.lang.StringBuilder) -> appendColumns
    650:654:void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    657:660:void appendLimit(java.lang.StringBuilder) -> appendLimit
    663:673:void appendOffset(java.lang.StringBuilder) -> appendOffset
    676:692:void appendGroupBys(java.lang.StringBuilder) -> appendGroupBys
    695:695:boolean hasGroupStuff() -> hasGroupStuff
    699:718:void appendGroupBys(java.lang.StringBuilder,boolean) -> appendGroupBys
    721:737:void appendOrderBys(java.lang.StringBuilder,java.util.List) -> appendOrderBys
    740:740:boolean hasOrderStuff() -> hasOrderStuff
    744:777:void appendOrderBys(java.lang.StringBuilder,boolean,java.util.List) -> appendOrderBys
    780:785:void appendColumnName(java.lang.StringBuilder,java.lang.String) -> appendColumnName
    788:791:void appendHaving(java.lang.StringBuilder) -> appendHaving
com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper -> com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper:
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    822:823:void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    826:826:com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
com.j256.ormlite.stmt.QueryBuilder$JoinInfo -> com.j256.ormlite.stmt.QueryBuilder$JoinInfo:
    java.lang.String type -> type
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    com.j256.ormlite.field.FieldType localField -> localField
    com.j256.ormlite.field.FieldType remoteField -> remoteField
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation operation -> operation
    com.j256.ormlite.stmt.QueryBuilder this$0 -> this$0
com.j256.ormlite.stmt.RawResultsImpl -> com.j256.ormlite.stmt.RawResultsImpl:
    com.j256.ormlite.stmt.SelectIterator iterator -> iterator
    java.lang.String[] columnNames -> columnNames
    38:38:int getNumberColumns() -> getNumberColumns
    42:42:java.lang.String[] getColumnNames() -> getColumnNames
    46:53:java.util.List getResults() -> getResults
    59:65:java.lang.Object getFirstResult() -> getFirstResult
    70:70:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    74:74:com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    78:82:void close() -> close
    20:20:java.util.Iterator iterator() -> iterator
com.j256.ormlite.stmt.RawRowMapperImpl -> com.j256.ormlite.stmt.RawRowMapperImpl:
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    25:37:java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.stmt.SelectArg:
    boolean hasBeenSet -> hasBeenSet
    java.lang.Object value -> value
    91:91:java.lang.Object getValue() -> getValue
    96:98:void setValue(java.lang.Object) -> setValue
    102:102:boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.stmt.SelectIterator:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.dao.Dao classDao -> classDao
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    com.j256.ormlite.support.CompiledStatement compiledStmt -> compiledStmt
    com.j256.ormlite.support.DatabaseResults results -> results
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> rowMapper
    java.lang.String statement -> statement
    boolean first -> first
    boolean closed -> closed
    boolean alreadyMoved -> alreadyMoved
    java.lang.Object last -> last
    int rowC -> rowC
    69:87:boolean hasNextThrow() -> hasNextThrow
    98:103:boolean hasNext() -> hasNext
    108:115:java.lang.Object first() -> first
    120:127:java.lang.Object previous() -> previous
    132:138:java.lang.Object current() -> current
    143:161:java.lang.Object nextThrow() -> nextThrow
    171:183:java.lang.Object next() -> next
    187:194:java.lang.Object moveRelative(int) -> moveRelative
    207:221:void removeThrow() -> removeThrow
    231:237:void remove() -> remove
    240:249:void close() -> close
    253:257:void closeQuietly() -> closeQuietly
    260:260:com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    264:267:void moveToNext() -> moveToNext
    270:273:java.lang.Object getCurrent() -> getCurrent
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.stmt.StatementBuilder:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.String tableName -> tableName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean addTableName -> addTableName
    com.j256.ormlite.stmt.Where where -> where
    55:56:com.j256.ormlite.stmt.Where where() -> where
    63:64:void setWhere(com.j256.ormlite.stmt.Where) -> setWhere
    73:84:com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement(java.lang.Long) -> prepareStatement
    93:94:java.lang.String prepareStatementString() -> prepareStatementString
    101:103:com.j256.ormlite.stmt.StatementBuilder$StatementInfo prepareStatementInfo() -> prepareStatementInfo
    111:112:void clear() -> clear
    118:119:void reset() -> reset
    122:126:java.lang.String buildStatementString(java.util.List) -> buildStatementString
    139:142:void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    154:160:boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    172:172:boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    180:180:com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    190:190:com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> verifyColumnName
    197:197:com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.StatementBuilder$1 -> com.j256.ormlite.stmt.StatementBuilder$1:
com.j256.ormlite.stmt.StatementBuilder$StatementInfo -> com.j256.ormlite.stmt.StatementBuilder$StatementInfo:
    java.lang.String statement -> statement
    java.util.List argList -> argList
    263:263:java.lang.String getStatement() -> getStatement
    267:267:java.util.List getArgList() -> getArgList
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.stmt.StatementBuilder$StatementType:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> SELECT
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> SELECT_LONG
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> SELECT_RAW
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> UPDATE
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> DELETE
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> EXECUTE
    boolean okForStatementBuilder -> okForStatementBuilder
    boolean okForQuery -> okForQuery
    boolean okForUpdate -> okForUpdate
    boolean okForExecute -> okForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> $VALUES
    203:203:com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    203:203:com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    233:233:boolean isOkForStatementBuilder() -> isOkForStatementBuilder
    237:237:boolean isOkForQuery() -> isOkForQuery
    241:241:boolean isOkForUpdate() -> isOkForUpdate
    245:245:boolean isOkForExecute() -> isOkForExecute
com.j256.ormlite.stmt.StatementBuilder$WhereOperation -> com.j256.ormlite.stmt.StatementBuilder$WhereOperation:
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation FIRST -> FIRST
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation AND -> AND
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation OR -> OR
    java.lang.String before -> before
    java.lang.String after -> after
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] $VALUES -> $VALUES
    274:274:com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] values() -> values
    274:274:com.j256.ormlite.stmt.StatementBuilder$WhereOperation valueOf(java.lang.String) -> valueOf
    293:296:void appendBefore(java.lang.StringBuilder) -> appendBefore
    302:305:void appendAfter(java.lang.StringBuilder) -> appendAfter
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.stmt.StatementExecutor:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> preparedQueryForAll
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> mappedInsert
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> mappedUpdate
    com.j256.ormlite.stmt.mapped.MappedUpdateId mappedUpdateId -> mappedUpdateId
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> mappedDelete
    com.j256.ormlite.stmt.mapped.MappedRefresh mappedRefresh -> mappedRefresh
    java.lang.String countStarQuery -> countStarQuery
    java.lang.String ifExistsQuery -> ifExistsQuery
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> ifExistsFieldTypes
    com.j256.ormlite.dao.RawRowMapper rawRowMapper -> rawRowMapper
    82:85:java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> queryForId
    93:108:java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> queryForFirst
    117:118:java.util.List queryForAll(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> queryForAll
    125:133:long queryForCountStar(com.j256.ormlite.support.DatabaseConnection) -> queryForCountStar
    140:153:long queryForLong(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt) -> queryForLong
    162:185:long queryForLong(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> queryForLong
    196:207:java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> query
    216:217:com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,int,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    224:225:com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    232:235:com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    243:258:com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache,int) -> buildIterator
    268:291:com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    301:324:com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    334:357:com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    367:390:com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    399:411:int updateRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> updateRaw
    419:420:int executeRawNoArgs(com.j256.ormlite.support.DatabaseConnection,java.lang.String) -> executeRawNoArgs
    427:439:int executeRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> executeRaw
    447:450:int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> create
    457:460:int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    468:471:int updateId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> updateId
    478:482:int update(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedUpdate) -> update
    491:494:int refresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> refresh
    501:504:int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    511:514:int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
    523:523:int deleteObjects(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    532:532:int deleteIds(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    539:543:int delete(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedDelete) -> delete
    552:581:java.lang.Object callBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> callBatchTasks
    587:592:java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    596:605:boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> ifExists
    609:612:void assignStatementArguments(com.j256.ormlite.support.CompiledStatement,java.lang.String[]) -> assignStatementArguments
    615:618:void prepareQueryForAll() -> prepareQueryForAll
    48:48:java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper -> com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper:
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    696:707:java.lang.Object[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    687:687:java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper:
    com.j256.ormlite.dao.RawRowMapper mapper -> mapper
    com.j256.ormlite.stmt.GenericRowMapper stringRowMapper -> stringRowMapper
    java.lang.String[] columnNames -> columnNames
    635:636:java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    640:644:java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper:
    com.j256.ormlite.dao.RawRowObjectMapper mapper -> mapper
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.String[] columnNames -> columnNames
    663:672:java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    676:680:java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.ThreadLocalSelectArg -> com.j256.ormlite.stmt.ThreadLocalSelectArg:
    java.lang.ThreadLocal threadValue -> threadValue
    36:40:java.lang.Object getValue() -> getValue
    46:47:void setValue(java.lang.Object) -> setValue
    51:51:boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper -> com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper:
    java.lang.Object value -> value
com.j256.ormlite.stmt.UpdateBuilder -> com.j256.ormlite.stmt.UpdateBuilder:
    java.util.List updateClauseList -> updateClauseList
    39:39:com.j256.ormlite.stmt.PreparedUpdate prepare() -> prepare
    47:52:com.j256.ormlite.stmt.StatementBuilder updateColumnValue(java.lang.String,java.lang.Object) -> updateColumnValue
    66:71:com.j256.ormlite.stmt.StatementBuilder updateColumnExpression(java.lang.String,java.lang.String) -> updateColumnExpression
    80:81:void escapeColumnName(java.lang.StringBuilder,java.lang.String) -> escapeColumnName
    88:90:java.lang.String escapeColumnName(java.lang.String) -> escapeColumnName
    99:100:void escapeValue(java.lang.StringBuilder,java.lang.String) -> escapeValue
    108:110:java.lang.String escapeValue(java.lang.String) -> escapeValue
    117:117:int update() -> update
    126:127:void clear() -> clear
    131:133:void reset() -> reset
    137:152:void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    157:157:void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    160:164:void addUpdateColumnToList(java.lang.String,com.j256.ormlite.stmt.query.Clause) -> addUpdateColumnToList
com.j256.ormlite.stmt.Where -> com.j256.ormlite.stmt.Where:
    int CLAUSE_STACK_START_SIZE -> CLAUSE_STACK_START_SIZE
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> statementBuilder
    com.j256.ormlite.field.FieldType idFieldType -> idFieldType
    java.lang.String idColumnName -> idColumnName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> clauseStack
    int clauseStackLevel -> clauseStackLevel
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> needsFuture
    153:156:com.j256.ormlite.stmt.Where and() -> and
    171:175:com.j256.ormlite.stmt.Where and(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> and
    192:200:com.j256.ormlite.stmt.Where and(int) -> and
    207:208:com.j256.ormlite.stmt.Where between(java.lang.String,java.lang.Object,java.lang.Object) -> between
    215:217:com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> eq
    224:226:com.j256.ormlite.stmt.Where ge(java.lang.String,java.lang.Object) -> ge
    233:235:com.j256.ormlite.stmt.Where gt(java.lang.String,java.lang.Object) -> gt
    242:243:com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Iterable) -> in
    250:251:com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Iterable) -> notIn
    258:258:com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Object[]) -> in
    265:265:com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Object[]) -> notIn
    279:279:com.j256.ormlite.stmt.Where in(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    286:286:com.j256.ormlite.stmt.Where notIn(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> notIn
    298:300:com.j256.ormlite.stmt.Where exists(com.j256.ormlite.stmt.QueryBuilder) -> exists
    307:308:com.j256.ormlite.stmt.Where isNull(java.lang.String) -> isNull
    315:316:com.j256.ormlite.stmt.Where isNotNull(java.lang.String) -> isNotNull
    323:325:com.j256.ormlite.stmt.Where le(java.lang.String,java.lang.Object) -> le
    332:334:com.j256.ormlite.stmt.Where lt(java.lang.String,java.lang.Object) -> lt
    341:343:com.j256.ormlite.stmt.Where like(java.lang.String,java.lang.Object) -> like
    350:352:com.j256.ormlite.stmt.Where ne(java.lang.String,java.lang.Object) -> ne
    363:366:com.j256.ormlite.stmt.Where not() -> not
    373:374:com.j256.ormlite.stmt.Where not(com.j256.ormlite.stmt.Where) -> not
    381:384:com.j256.ormlite.stmt.Where or() -> or
    399:403:com.j256.ormlite.stmt.Where or(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> or
    420:428:com.j256.ormlite.stmt.Where or(int) -> or
    435:439:com.j256.ormlite.stmt.Where idEq(java.lang.Object) -> idEq
    446:451:com.j256.ormlite.stmt.Where idEq(com.j256.ormlite.dao.Dao,java.lang.Object) -> idEq
    469:480:com.j256.ormlite.stmt.Where raw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> raw
    488:489:com.j256.ormlite.stmt.Where rawComparison(java.lang.String,java.lang.String,java.lang.Object) -> rawComparison
    496:496:com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    503:503:java.util.List query() -> query
    510:510:com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    517:517:java.lang.Object queryForFirst() -> queryForFirst
    524:524:java.lang.String[] queryRawFirst() -> queryRawFirst
    531:531:long countOf() -> countOf
    538:538:com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    546:546:com.j256.ormlite.stmt.Where clear() -> clear
    553:558:com.j256.ormlite.stmt.Where reset() -> reset
    565:567:java.lang.String getStatement() -> getStatement
    577:591:void appendSql(java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    595:599:java.lang.String toString() -> toString
    604:607:com.j256.ormlite.stmt.QueryBuilder checkQueryBuilderMethod(java.lang.String) -> checkQueryBuilderMethod
    613:628:com.j256.ormlite.stmt.Where in(boolean,java.lang.String,java.lang.Object[]) -> in
    632:645:com.j256.ormlite.stmt.Where in(boolean,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    650:659:com.j256.ormlite.stmt.query.Clause[] buildClauseArray(com.j256.ormlite.stmt.Where[],java.lang.String) -> buildClauseArray
    663:668:void addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause) -> addNeedsFuture
    671:678:void addClause(com.j256.ormlite.stmt.query.Clause) -> addClause
    681:681:com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> findColumnFieldType
    686:698:void push(com.j256.ormlite.stmt.query.Clause) -> push
    701:708:com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> pop
    712:712:com.j256.ormlite.stmt.query.Clause peek() -> peek
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.stmt.mapped.BaseMappedQuery:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> resultsFieldTypes
    java.util.Map columnPositions -> columnPositions
    java.lang.Object parent -> parent
    java.lang.Object parentId -> parentId
    35:96:java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    103:105:void setParentInformation(java.lang.Object,java.lang.Object) -> setParentInformation
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.stmt.mapped.BaseMappedStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Class clazz -> clazz
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.String statement -> statement
    com.j256.ormlite.field.FieldType[] argFieldTypes -> argFieldTypes
    39:51:java.lang.Object[] getFieldObjects(java.lang.Object) -> getFieldObjects
    58:58:java.lang.Object convertIdToFieldObject(java.lang.Object) -> convertIdToFieldObject
    63:66:void appendWhereFieldEq(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> appendWhereFieldEq
    69:74:void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTableName
    78:83:void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    87:87:java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.stmt.mapped.MappedCreate:
    java.lang.String queryNextSequenceStmt -> queryNextSequenceStmt
    java.lang.String dataClassName -> dataClassName
    int versionFieldTypeIndex -> versionFieldTypeIndex
    38:135:int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> insert
    140:189:com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    193:198:boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> foreignCollectionsAreAssigned
    203:216:boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> isFieldCreatable
    221:230:java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> buildQueryNextSequence
    237:244:void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> assignSequenceId
    248:253:void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
com.j256.ormlite.stmt.mapped.MappedCreate$1 -> com.j256.ormlite.stmt.mapped.MappedCreate$1:
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder:
    java.lang.Number key -> key
    259:259:java.lang.Number getKey() -> getKey
    263:268:void addKey(java.lang.Number) -> addKey
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.stmt.mapped.MappedDelete:
    25:33:com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    41:54:int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    63:75:int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
com.j256.ormlite.stmt.mapped.MappedDeleteCollection -> com.j256.ormlite.stmt.mapped.MappedDeleteCollection:
    30:39:int deleteObjects(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    48:57:int deleteIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    65:74:com.j256.ormlite.stmt.mapped.MappedDeleteCollection build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,int) -> build
    80:94:int updateRows(com.j256.ormlite.support.DatabaseConnection,java.lang.Class,com.j256.ormlite.stmt.mapped.MappedDeleteCollection,java.lang.Object[],com.j256.ormlite.dao.ObjectCache) -> updateRows
    100:116:void appendWhereIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int,com.j256.ormlite.field.FieldType[]) -> appendWhereIds
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.stmt.mapped.MappedPreparedStmt:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> argHolders
    java.lang.Long limit -> limit
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    40:40:com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    45:52:com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    56:56:java.lang.String getStatement() -> getStatement
    60:60:com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    64:72:void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
    80:114:com.j256.ormlite.support.CompiledStatement assignStatementArguments(com.j256.ormlite.support.CompiledStatement) -> assignStatementArguments
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.stmt.mapped.MappedQueryForId:
    java.lang.String label -> label
    30:51:java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    56:64:com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> build
    71:74:java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> buildStatement
    78:82:void logArgs(java.lang.Object[]) -> logArgs
com.j256.ormlite.stmt.mapped.MappedRefresh -> com.j256.ormlite.stmt.mapped.MappedRefresh:
    31:43:int executeRefresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> executeRefresh
    48:54:com.j256.ormlite.stmt.mapped.MappedRefresh build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.stmt.mapped.MappedUpdate:
    com.j256.ormlite.field.FieldType versionFieldType -> versionFieldType
    int versionFieldTypeIndex -> versionFieldTypeIndex
    31:82:com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    91:129:int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    134:137:boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> isFieldUpdatable
com.j256.ormlite.stmt.mapped.MappedUpdateId -> com.j256.ormlite.stmt.mapped.MappedUpdateId:
    30:51:int execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    57:68:com.j256.ormlite.stmt.mapped.MappedUpdateId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    75:75:java.lang.Object extractIdToFieldObject(java.lang.Object) -> extractIdToFieldObject
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.stmt.query.BaseComparison:
    java.lang.String NUMBER_CHARACTERS -> NUMBER_CHARACTERS
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    java.lang.Object value -> value
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    39:48:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    51:51:java.lang.String getColumnName() -> getColumnName
    56:57:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    64:120:void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    124:129:java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Between -> com.j256.ormlite.stmt.query.Between:
    java.lang.Object low -> low
    java.lang.Object high -> high
    29:30:void appendOperation(java.lang.StringBuilder) -> appendOperation
    35:44:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    16:16:java.lang.String toString() -> toString
    16:16:java.lang.String getColumnName() -> getColumnName
    16:16:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.stmt.query.Clause:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.stmt.query.Comparison:
    java.lang.String getColumnName() -> getColumnName
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
com.j256.ormlite.stmt.query.Exists -> com.j256.ormlite.stmt.query.Exists:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    26:29:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.In -> com.j256.ormlite.stmt.query.In:
    java.lang.Iterable objects -> objects
    boolean in -> in
    37:42:void appendOperation(java.lang.StringBuilder) -> appendOperation
    47:62:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    17:17:java.lang.String toString() -> toString
    17:17:java.lang.String getColumnName() -> getColumnName
    17:17:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.InSubQuery -> com.j256.ormlite.stmt.query.InSubQuery:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    boolean in -> in
    31:36:void appendOperation(java.lang.StringBuilder) -> appendOperation
    41:54:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    17:17:java.lang.String toString() -> toString
    17:17:java.lang.String getColumnName() -> getColumnName
    17:17:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNotNull -> com.j256.ormlite.stmt.query.IsNotNull:
    24:25:void appendOperation(java.lang.StringBuilder) -> appendOperation
    30:30:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    16:16:java.lang.String toString() -> toString
    16:16:java.lang.String getColumnName() -> getColumnName
    16:16:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNull -> com.j256.ormlite.stmt.query.IsNull:
    24:25:void appendOperation(java.lang.StringBuilder) -> appendOperation
    30:30:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    16:16:java.lang.String toString() -> toString
    16:16:java.lang.String getColumnName() -> getColumnName
    16:16:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.ManyClause -> com.j256.ormlite.stmt.query.ManyClause:
    java.lang.String AND_OPERATION -> AND_OPERATION
    java.lang.String OR_OPERATION -> OR_OPERATION
    com.j256.ormlite.stmt.query.Clause first -> first
    com.j256.ormlite.stmt.query.Clause second -> second
    com.j256.ormlite.stmt.query.Clause[] others -> others
    int startOthersAt -> startOthersAt
    java.lang.String operation -> operation
    57:72:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    75:76:void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.stmt.query.NeedsFutureClause:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.Not -> com.j256.ormlite.stmt.query.Not:
    com.j256.ormlite.stmt.query.Comparison comparison -> comparison
    com.j256.ormlite.stmt.query.Exists exists -> exists
    37:46:void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
    50:69:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    73:76:java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.stmt.query.OrderBy:
    java.lang.String columnName -> columnName
    boolean ascending -> ascending
    24:24:java.lang.String getColumnName() -> getColumnName
    31:31:boolean isAscending() -> isAscending
com.j256.ormlite.stmt.query.Raw -> com.j256.ormlite.stmt.query.Raw:
    java.lang.String statement -> statement
    com.j256.ormlite.stmt.ArgumentHolder[] args -> args
    24:29:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetExpression -> com.j256.ormlite.stmt.query.SetExpression:
    29:30:void appendOperation(java.lang.StringBuilder) -> appendOperation
    36:37:void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    21:21:java.lang.String toString() -> toString
    21:21:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    21:21:java.lang.String getColumnName() -> getColumnName
    21:21:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetValue -> com.j256.ormlite.stmt.query.SetValue:
    com.j256.ormlite.stmt.ArgumentHolder nullValue -> nullValue
    34:35:void appendOperation(java.lang.StringBuilder) -> appendOperation
    20:20:java.lang.String toString() -> toString
    20:20:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    20:20:java.lang.String getColumnName() -> getColumnName
    20:20:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.stmt.query.SimpleComparison:
    java.lang.String EQUAL_TO_OPERATION -> EQUAL_TO_OPERATION
    java.lang.String GREATER_THAN_OPERATION -> GREATER_THAN_OPERATION
    java.lang.String GREATER_THAN_EQUAL_TO_OPERATION -> GREATER_THAN_EQUAL_TO_OPERATION
    java.lang.String LESS_THAN_OPERATION -> LESS_THAN_OPERATION
    java.lang.String LESS_THAN_EQUAL_TO_OPERATION -> LESS_THAN_EQUAL_TO_OPERATION
    java.lang.String LIKE_OPERATION -> LIKE_OPERATION
    java.lang.String NOT_EQUAL_TO_OPERATION -> NOT_EQUAL_TO_OPERATION
    java.lang.String operation -> operation
    31:33:void appendOperation(java.lang.StringBuilder) -> appendOperation
    12:12:java.lang.String toString() -> toString
    12:12:void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    12:12:java.lang.String getColumnName() -> getColumnName
    12:12:void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.support.BaseConnectionSource:
    java.lang.ThreadLocal specialConnection -> specialConnection
    17:21:com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    29:33:com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> getSavedConnection
    41:48:boolean isSavedConnection(com.j256.ormlite.support.DatabaseConnection) -> isSavedConnection
    59:70:boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> saveSpecial
    80:96:boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> clearSpecial
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.support.BaseConnectionSource$NestedConnection:
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    int nestedC -> nestedC
    109:110:void increment() -> increment
    113:114:int decrementAndGet() -> decrementAndGet
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.support.CompiledStatement:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    int runUpdate() -> runUpdate
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.support.ConnectionSource:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.support.DatabaseConnection:
    java.lang.Object MORE_THAN_ONE -> MORE_THAN_ONE
    int DEFAULT_RESULT_FLAGS -> DEFAULT_RESULT_FLAGS
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxy -> com.j256.ormlite.support.DatabaseConnectionProxy:
    com.j256.ormlite.support.DatabaseConnection proxy -> proxy
    26:29:boolean isAutoCommitSupported() -> isAutoCommitSupported
    34:37:boolean isAutoCommit() -> isAutoCommit
    42:45:void setAutoCommit(boolean) -> setAutoCommit
    48:51:java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    56:59:void commit(java.sql.Savepoint) -> commit
    62:65:void rollback(java.sql.Savepoint) -> rollback
    68:71:int executeStatement(java.lang.String,int) -> executeStatement
    77:80:com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    86:89:int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    94:97:int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    102:105:int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    111:114:java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    119:122:long queryForLong(java.lang.String) -> queryForLong
    127:130:long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    135:138:void close() -> close
    141:144:void closeQuietly() -> closeQuietly
    147:150:boolean isClosed() -> isClosed
    155:158:boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxyFactory -> com.j256.ormlite.support.DatabaseConnectionProxyFactory:
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.support.DatabaseResults:
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean previous() -> previous
    boolean next() -> next
    boolean last() -> last
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.support.GeneratedKeyHolder:
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory -> com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory:
    java.lang.Class proxyClass -> proxyClass
    java.lang.reflect.Constructor constructor -> constructor
    38:40:com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.table.DatabaseTable:
    java.lang.String tableName() -> tableName
    java.lang.Class daoClass() -> daoClass
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.table.DatabaseTableConfig:
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    java.util.List fieldConfigs -> fieldConfigs
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    java.lang.reflect.Constructor constructor -> constructor
    61:67:void initialize() -> initialize
    70:70:java.lang.Class getDataClass() -> getDataClass
    75:76:void setDataClass(java.lang.Class) -> setDataClass
    79:79:java.lang.String getTableName() -> getTableName
    86:87:void setTableName(java.lang.String) -> setTableName
    90:91:void setFieldConfigs(java.util.List) -> setFieldConfigs
    97:104:void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> extractFieldTypes
    110:113:com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> getFieldTypes
    117:117:java.util.List getFieldConfigs() -> getFieldConfigs
    125:128:java.lang.reflect.Constructor getConstructor() -> getConstructor
    133:134:void setConstructor(java.lang.reflect.Constructor) -> setConstructor
    142:146:com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    153:167:java.lang.String extractTableName(java.lang.Class) -> extractTableName
    177:198:java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> findNoArgConstructor
    205:218:com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractFieldTypes
    223:250:com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> convertFieldConfigs
com.j256.ormlite.table.DatabaseTableConfigLoader -> com.j256.ormlite.table.DatabaseTableConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    java.lang.String CONFIG_FILE_FIELDS_START -> CONFIG_FILE_FIELDS_START
    java.lang.String CONFIG_FILE_FIELDS_END -> CONFIG_FILE_FIELDS_END
    java.lang.String FIELD_NAME_DATA_CLASS -> FIELD_NAME_DATA_CLASS
    java.lang.String FIELD_NAME_TABLE_NAME -> FIELD_NAME_TABLE_NAME
    30:38:java.util.List loadDatabaseConfigFromReader(java.io.BufferedReader) -> loadDatabaseConfigFromReader
    47:84:com.j256.ormlite.table.DatabaseTableConfig fromReader(java.io.BufferedReader) -> fromReader
    93:97:void write(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> write
    108:129:void writeConfig(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> writeConfig
    135:146:void readTableField(com.j256.ormlite.table.DatabaseTableConfig,java.lang.String,java.lang.String) -> readTableField
    152:170:void readFields(java.io.BufferedReader,com.j256.ormlite.table.DatabaseTableConfig) -> readFields
com.j256.ormlite.table.ObjectFactory -> com.j256.ormlite.table.ObjectFactory:
    java.lang.Object createObject(java.lang.reflect.Constructor,java.lang.Class) -> createObject
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.table.TableInfo:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> NO_FOREIGN_COLLECTIONS
    com.j256.ormlite.dao.BaseDaoImpl baseDaoImpl -> baseDaoImpl
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    com.j256.ormlite.field.FieldType[] foreignCollections -> foreignCollections
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.reflect.Constructor constructor -> constructor
    boolean foreignAutoCreate -> foreignAutoCreate
    java.util.Map fieldNameMap -> fieldNameMap
    114:114:java.lang.Class getDataClass() -> getDataClass
    121:121:java.lang.String getTableName() -> getTableName
    128:128:com.j256.ormlite.field.FieldType[] getFieldTypes() -> getFieldTypes
    135:155:com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> getFieldTypeByColumnName
    162:162:com.j256.ormlite.field.FieldType getIdField() -> getIdField
    166:166:java.lang.reflect.Constructor getConstructor() -> getConstructor
    173:183:java.lang.String objectToString(java.lang.Object) -> objectToString
    192:204:java.lang.Object createObject() -> createObject
    213:213:boolean isUpdatable() -> isUpdatable
    220:220:boolean isForeignAutoCreate() -> isForeignAutoCreate
    227:227:com.j256.ormlite.field.FieldType[] getForeignCollections() -> getForeignCollections
    235:240:boolean hasColumnName(java.lang.String) -> hasColumnName
    244:249:void wireNewInstance(com.j256.ormlite.dao.BaseDaoImpl,java.lang.Object) -> wireNewInstance
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.table.TableUtils:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    53:53:int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTable
    61:61:int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTableIfNotExists
    76:76:int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTable
    84:84:int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTableIfNotExists
    99:104:java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> getCreateTableStatements
    121:127:java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> getCreateTableStatements
    148:154:int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> dropTable
    176:183:int dropTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> dropTable
    196:200:int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> clearTable
    213:213:int clearTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> clearTable
    218:223:int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> createTable
    229:235:int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> createTable
    240:261:int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.String) -> clearTable
    267:276:int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doDropTable
    283:303:void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropIndexStatements
    310:359:void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> addCreateTableStatements
    364:412:void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> addCreateIndexStatements
    419:431:void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropTableStatements
    435:448:int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doCreateTable
    454:486:int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean,boolean) -> doStatements
    491:518:int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> doCreateTestQueries
    523:526:java.util.List addCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> addCreateTableStatements
